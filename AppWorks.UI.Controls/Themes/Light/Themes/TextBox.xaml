<ResourceDictionary x:Class=" AppWorks.UI.Controls.Themes.Light.Themes.TextBox"
                    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:brushes="clr-namespace:AppWorks.UI.Controls.Themes"
                    xmlns:converters="clr-namespace:AppWorks.UI.Controls.Converters">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="../CommonTemplates.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <converters:IsEmptyStringToBolleanConverter x:Key="isEmptyStringConverter" />

    <Style TargetType="{x:Type TextBox}">
        <EventSetter Event="PreviewKeyDown" Handler="TextBoxUpdate_KeyDown" />
        <Setter Property="MinHeight" Value="25" />
        <Setter Property="Background" Value="{DynamicResource {x:Static brushes:BrushSet.BackgroundBrushKey}}" />
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static brushes:BrushSet.BorderBrushKey}}" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static brushes:BrushSet.ForegroundBrushKey}}" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="FontWeight" Value="Regular" />
        <Setter Property="Padding" Value="2" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="AllowDrop" Value="True" />
        <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=Text}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Grid>
                        <Border x:Name="Border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost"
                                          Margin="{TemplateBinding Padding}"
                                          HorizontalScrollBarVisibility="Hidden"
                                          VerticalScrollBarVisibility="Hidden" />
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="Disabled" />
                                    <VisualState x:Name="ReadOnly" />
                                    <VisualState x:Name="MouseOver" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                        </Border>

                        <Border x:Name="DisabledBorder"
                                Background="{DynamicResource {x:Static brushes:BrushSet.DisabledBackgroundBrushKey}}"
                                BorderBrush="Transparent"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Focusable="False"
                                IsHitTestVisible="False"
                                Opacity="0" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="DisabledBorder" Property="Opacity" Value="1" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="BorderBrush" Value="{DynamicResource {x:Static brushes:BrushSet.AlternativeAccentBorderBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Validation.ErrorTemplate" Value="{StaticResource ValidationErrorTemplate}" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Text, RelativeSource={RelativeSource Self}, Converter={StaticResource isEmptyStringConverter}}" Value="True">
                <Setter Property="ToolTip" Value="{x:Null}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>