<ResourceDictionary x:Class="AppWorks.UI.Controls.Themes.Dark.Themes.RadDatePicker"
                    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:brushes="clr-namespace:AppWorks.UI.Controls.Themes"
                    xmlns:calendar="clr-namespace:Telerik.Windows.Controls.Calendar;assembly=Telerik.Windows.Controls.Input"
                    xmlns:chromes="clr-namespace:Telerik.Windows.Controls.Chromes;assembly=Telerik.Windows.Controls"
                    xmlns:telerik="http://schemas.telerik.com/2008/xaml/presentation">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="../CommonTemplates.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style TargetType="{x:Type telerik:RadDatePicker}">
        <Setter Property="CalendarStyle">
            <Setter.Value>
                <Style TargetType="{x:Type telerik:RadCalendar}">
                    <Setter Property="Columns" Value="1" />
                    <Setter Property="Rows" Value="1" />
                    <Setter Property="Background" Value="{DynamicResource {x:Static brushes:BrushSet.AccentBackgroundBrushKey}}" />
                    <Setter Property="MonthViewStyle">
                        <Setter.Value>
                            <Style TargetType="{x:Type calendar:CalendarView}">
                                <Setter Property="HorizontalContentAlignment" Value="Center" />
                                <Setter Property="VerticalContentAlignment" Value="Center" />
                                <Setter Property="Padding" Value="3" />
                                <Setter Property="IsTabStop" Value="False" />
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type calendar:CalendarView}">
                                            <Grid Margin="-1,-1,0,0">
                                                <Grid x:Name="WeekHeaders">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="*" />
                                                        <ColumnDefinition Width="7*" />
                                                    </Grid.ColumnDefinitions>
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition Height="*" />
                                                        <RowDefinition Height="6*" />
                                                    </Grid.RowDefinitions>
                                                    <Rectangle x:Name="VerticalBackground"
                                                               Grid.RowSpan="2"
                                                               Panel.ZIndex="0"
                                                               Fill="{DynamicResource {x:Static brushes:BrushSet.AlternativeForegroundBrushKey}}">
                                                        <Rectangle.Visibility>
                                                            <Binding Path="HideColumn" RelativeSource="{RelativeSource TemplatedParent}">
                                                                <Binding.Converter>
                                                                    <telerik:InvertedBooleanToVisibilityConverter />
                                                                </Binding.Converter>
                                                            </Binding>
                                                        </Rectangle.Visibility>
                                                    </Rectangle>
                                                    <Rectangle x:Name="HorizontalBackground"
                                                               Grid.ColumnSpan="2"
                                                               Panel.ZIndex="0"
                                                               Fill="{DynamicResource {x:Static brushes:BrushSet.AlternativeForegroundBrushKey}}">
                                                        <Rectangle.Visibility>
                                                            <Binding Path="HideRow" RelativeSource="{RelativeSource TemplatedParent}">
                                                                <Binding.Converter>
                                                                    <telerik:InvertedBooleanToVisibilityConverter />
                                                                </Binding.Converter>
                                                            </Binding>
                                                        </Rectangle.Visibility>
                                                    </Rectangle>
                                                </Grid>
                                                <ItemsPresenter Margin="1,0,1,1" />
                                                <Rectangle x:Name="MinDesiredSize"
                                                           Width="240"
                                                           Height="155" />
                                            </Grid>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Margin" Value="0" />
                            </Style>
                        </Setter.Value>
                    </Setter>

                    <Setter Property="DayButtonStyle">
                        <Setter.Value>
                            <Style TargetType="{x:Type calendar:CalendarButton}">
                                <Setter Property="Padding" Value="0" />
                                <Setter Property="HorizontalContentAlignment" Value="Center" />
                                <Setter Property="VerticalContentAlignment" Value="Center" />
                                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type calendar:CalendarButton}">
                                            <Border x:Name="LayoutRoot" Background="Transparent">
                                                <Grid>
                                                    <Border Background="{TemplateBinding Background}"
                                                            BorderBrush="{TemplateBinding BorderBrush}"
                                                            BorderThickness="{TemplateBinding BorderThickness}" />
                                                    <chromes:ButtonChrome x:Name="SelectionChrome"
                                                                          BorderThickness="0"
                                                                          RenderFocused="{TemplateBinding IsFocused}"
                                                                          RenderHighlighted="{TemplateBinding IsMouseOver}"
                                                                          RenderNormal="False"
                                                                          RenderSelected="{TemplateBinding IsSelected}" />
                                                    <Border x:Name="SelectedVisual"
                                                            Background="{DynamicResource {x:Static brushes:BrushSet.MarkBrushKey}}"
                                                            Visibility="Collapsed" />
                                                    <Border x:Name="MouseOverVisual"
                                                            Background="{DynamicResource {x:Static brushes:BrushSet.MarkBrushKey}}"
                                                            Visibility="Collapsed" />
                                                    <ContentPresenter x:Name="Content"
                                                                      Margin="{TemplateBinding Padding}"
                                                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                                    <Border x:Name="Today"
                                                            BorderBrush="{DynamicResource {x:Static brushes:BrushSet.AlternativeAccentBorderBrushKey}}"
                                                            BorderThickness="1"
                                                            Visibility="Collapsed" />
                                                </Grid>
                                                <VisualStateManager.VisualStateGroups>
                                                    <VisualStateGroup x:Name="CommonStates">
                                                        <VisualState x:Name="Disabled">
                                                            <Storyboard>
                                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="LayoutRoot" Storyboard.TargetProperty="Opacity">
                                                                    <DiscreteDoubleKeyFrame KeyTime="0" Value="0.5" />
                                                                </DoubleAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState x:Name="Normal">
                                                            <Storyboard>
                                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="LayoutRoot" Storyboard.TargetProperty="Opacity">
                                                                    <DiscreteDoubleKeyFrame KeyTime="0" Value="1" />
                                                                </DoubleAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState x:Name="MouseOver">
                                                            <Storyboard>
                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MouseOverVisual" Storyboard.TargetProperty="Visibility">
                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                        <DiscreteObjectKeyFrame.Value>
                                                                            <Visibility>Visible</Visibility>
                                                                        </DiscreteObjectKeyFrame.Value>
                                                                    </DiscreteObjectKeyFrame>
                                                                </ObjectAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState x:Name="IsInAnotherView" />
                                                        <VisualState x:Name="IsNotFromCurrentView">
                                                            <Storyboard>
                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Content" Storyboard.TargetProperty="(TextElement.Foreground)">
                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                        <DiscreteObjectKeyFrame.Value>
                                                                            <SolidColorBrush Color="#FF797878" />
                                                                        </DiscreteObjectKeyFrame.Value>
                                                                    </DiscreteObjectKeyFrame>
                                                                </ObjectAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </VisualState>
                                                    </VisualStateGroup>
                                                    <VisualStateGroup x:Name="ButtonType">
                                                        <VisualState x:Name="Year" />
                                                        <VisualState x:Name="Decade" />
                                                        <VisualState x:Name="Date" />
                                                        <VisualState x:Name="WeekName">
                                                            <Storyboard>
                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SelectionChrome" Storyboard.TargetProperty="Visibility">
                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                        <DiscreteObjectKeyFrame.Value>
                                                                            <Visibility>Collapsed</Visibility>
                                                                        </DiscreteObjectKeyFrame.Value>
                                                                    </DiscreteObjectKeyFrame>
                                                                </ObjectAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState x:Name="WeekNumber">
                                                            <Storyboard>
                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Content" Storyboard.TargetProperty="(TextElement.Foreground)">
                                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{DynamicResource {x:Static brushes:BrushSet.AccentForegroundBrushKey}}" />
                                                                </ObjectAnimationUsingKeyFrames>
                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SelectionChrome" Storyboard.TargetProperty="Visibility">
                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                        <DiscreteObjectKeyFrame.Value>
                                                                            <Visibility>Collapsed</Visibility>
                                                                        </DiscreteObjectKeyFrame.Value>
                                                                    </DiscreteObjectKeyFrame>
                                                                </ObjectAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState x:Name="TodayDate">
                                                            <Storyboard>
                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Today" Storyboard.TargetProperty="Visibility">
                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                        <DiscreteObjectKeyFrame.Value>
                                                                            <Visibility>Visible</Visibility>
                                                                        </DiscreteObjectKeyFrame.Value>
                                                                    </DiscreteObjectKeyFrame>
                                                                </ObjectAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState x:Name="Month" />
                                                    </VisualStateGroup>
                                                    <VisualStateGroup x:Name="FocusStates">
                                                        <VisualState x:Name="Unfocused" />
                                                        <VisualState x:Name="Focused">
                                                            <Storyboard>
                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SelectionChrome" Storyboard.TargetProperty="BorderThickness">
                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                        <DiscreteObjectKeyFrame.Value>
                                                                            <Thickness>0</Thickness>
                                                                        </DiscreteObjectKeyFrame.Value>
                                                                    </DiscreteObjectKeyFrame>
                                                                </ObjectAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </VisualState>
                                                    </VisualStateGroup>
                                                    <VisualStateGroup x:Name="SelectionStates">
                                                        <VisualState x:Name="Unselected" />
                                                        <VisualState x:Name="Selected">
                                                            <Storyboard>
                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SelectedVisual" Storyboard.TargetProperty="Visibility">
                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                        <DiscreteObjectKeyFrame.Value>
                                                                            <Visibility>Visible</Visibility>
                                                                        </DiscreteObjectKeyFrame.Value>
                                                                    </DiscreteObjectKeyFrame>
                                                                </ObjectAnimationUsingKeyFrames>
                                                                <DoubleAnimation Duration="0"
                                                                                 Storyboard.TargetName="MouseOverVisual"
                                                                                 Storyboard.TargetProperty="Opacity"
                                                                                 To="0" />
                                                            </Storyboard>
                                                        </VisualState>
                                                    </VisualStateGroup>
                                                </VisualStateManager.VisualStateGroups>
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Setter.Value>
                    </Setter>

                    <Setter Property="MonthButtonStyle">
                        <Setter.Value>
                            <Style TargetType="{x:Type calendar:CalendarButton}">
                                <Setter Property="Padding" Value="0" />
                                <Setter Property="HorizontalContentAlignment" Value="Center" />
                                <Setter Property="VerticalContentAlignment" Value="Center" />
                                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type calendar:CalendarButton}">
                                            <Border x:Name="LayoutRoot" Background="Transparent">
                                                <Grid>
                                                    <Border Background="{TemplateBinding Background}"
                                                            BorderBrush="{TemplateBinding BorderBrush}"
                                                            BorderThickness="{TemplateBinding BorderThickness}" />
                                                    <chromes:ButtonChrome x:Name="SelectionChrome"
                                                                          BorderThickness="0"
                                                                          RenderFocused="{TemplateBinding IsFocused}"
                                                                          RenderHighlighted="{TemplateBinding IsMouseOver}"
                                                                          RenderNormal="False"
                                                                          RenderSelected="{TemplateBinding IsSelected}" />
                                                    <Border x:Name="SelectedVisual"
                                                            Background="{DynamicResource {x:Static brushes:BrushSet.SelectedBrushKey}}"
                                                            Visibility="Collapsed" />
                                                    <Border x:Name="MouseOverVisual"
                                                            Background="{DynamicResource {x:Static brushes:BrushSet.SelectedBrushKey}}"
                                                            Visibility="Collapsed" />
                                                    <ContentPresenter x:Name="Content"
                                                                      Margin="{TemplateBinding Padding}"
                                                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                                    <Border x:Name="Today"
                                                            BorderBrush="{DynamicResource {x:Static brushes:BrushSet.AlternativeAccentBorderBrushKey}}"
                                                            BorderThickness="1"
                                                            Visibility="Collapsed" />
                                                </Grid>
                                                <VisualStateManager.VisualStateGroups>
                                                    <VisualStateGroup x:Name="CommonStates">
                                                        <VisualState x:Name="Disabled">
                                                            <Storyboard>
                                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="LayoutRoot" Storyboard.TargetProperty="Opacity">
                                                                    <DiscreteDoubleKeyFrame KeyTime="0" Value="0.5" />
                                                                </DoubleAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState x:Name="Normal">
                                                            <Storyboard>
                                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="LayoutRoot" Storyboard.TargetProperty="Opacity">
                                                                    <DiscreteDoubleKeyFrame KeyTime="0" Value="1" />
                                                                </DoubleAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState x:Name="MouseOver">
                                                            <Storyboard>
                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MouseOverVisual" Storyboard.TargetProperty="Visibility">
                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                        <DiscreteObjectKeyFrame.Value>
                                                                            <Visibility>Visible</Visibility>
                                                                        </DiscreteObjectKeyFrame.Value>
                                                                    </DiscreteObjectKeyFrame>
                                                                </ObjectAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState x:Name="IsInAnotherView" />
                                                        <VisualState x:Name="IsNotFromCurrentView">
                                                            <Storyboard>
                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Content" Storyboard.TargetProperty="(TextElement.Foreground)">
                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                        <DiscreteObjectKeyFrame.Value>
                                                                            <SolidColorBrush Color="#FF797878" />
                                                                        </DiscreteObjectKeyFrame.Value>
                                                                    </DiscreteObjectKeyFrame>
                                                                </ObjectAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </VisualState>
                                                    </VisualStateGroup>
                                                    <VisualStateGroup x:Name="ButtonType">
                                                        <VisualState x:Name="Year" />
                                                        <VisualState x:Name="Decade" />
                                                        <VisualState x:Name="Date" />
                                                        <VisualState x:Name="WeekName">
                                                            <Storyboard>
                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SelectionChrome" Storyboard.TargetProperty="Visibility">
                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                        <DiscreteObjectKeyFrame.Value>
                                                                            <Visibility>Collapsed</Visibility>
                                                                        </DiscreteObjectKeyFrame.Value>
                                                                    </DiscreteObjectKeyFrame>
                                                                </ObjectAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState x:Name="WeekNumber">
                                                            <Storyboard>
                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Content" Storyboard.TargetProperty="(TextElement.Foreground)">
                                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{DynamicResource {x:Static brushes:BrushSet.AccentForegroundBrushKey}}" />
                                                                </ObjectAnimationUsingKeyFrames>
                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SelectionChrome" Storyboard.TargetProperty="Visibility">
                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                        <DiscreteObjectKeyFrame.Value>
                                                                            <Visibility>Collapsed</Visibility>
                                                                        </DiscreteObjectKeyFrame.Value>
                                                                    </DiscreteObjectKeyFrame>
                                                                </ObjectAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState x:Name="TodayDate">
                                                            <Storyboard>
                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Today" Storyboard.TargetProperty="Visibility">
                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                        <DiscreteObjectKeyFrame.Value>
                                                                            <Visibility>Visible</Visibility>
                                                                        </DiscreteObjectKeyFrame.Value>
                                                                    </DiscreteObjectKeyFrame>
                                                                </ObjectAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState x:Name="Month" />
                                                    </VisualStateGroup>
                                                    <VisualStateGroup x:Name="FocusStates">
                                                        <VisualState x:Name="Unfocused" />
                                                        <VisualState x:Name="Focused">
                                                            <Storyboard>
                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SelectionChrome" Storyboard.TargetProperty="BorderThickness">
                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                        <DiscreteObjectKeyFrame.Value>
                                                                            <Thickness>0</Thickness>
                                                                        </DiscreteObjectKeyFrame.Value>
                                                                    </DiscreteObjectKeyFrame>
                                                                </ObjectAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </VisualState>
                                                    </VisualStateGroup>
                                                    <VisualStateGroup x:Name="SelectionStates">
                                                        <VisualState x:Name="Unselected" />
                                                        <VisualState x:Name="Selected">
                                                            <Storyboard>
                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SelectedVisual" Storyboard.TargetProperty="Visibility">
                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                        <DiscreteObjectKeyFrame.Value>
                                                                            <Visibility>Visible</Visibility>
                                                                        </DiscreteObjectKeyFrame.Value>
                                                                    </DiscreteObjectKeyFrame>
                                                                </ObjectAnimationUsingKeyFrames>
                                                                <DoubleAnimation Duration="0"
                                                                                 Storyboard.TargetName="MouseOverVisual"
                                                                                 Storyboard.TargetProperty="Opacity"
                                                                                 To="0" />
                                                            </Storyboard>
                                                        </VisualState>
                                                    </VisualStateGroup>
                                                </VisualStateManager.VisualStateGroups>
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Setter.Value>
                    </Setter>

                    <Setter Property="YearButtonStyle">
                        <Setter.Value>
                            <Style TargetType="{x:Type calendar:CalendarButton}">
                                <Setter Property="Padding" Value="0" />
                                <Setter Property="HorizontalContentAlignment" Value="Center" />
                                <Setter Property="VerticalContentAlignment" Value="Center" />
                                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type calendar:CalendarButton}">
                                            <Border x:Name="LayoutRoot" Background="Transparent">
                                                <Grid>
                                                    <Border Background="{TemplateBinding Background}"
                                                            BorderBrush="{TemplateBinding BorderBrush}"
                                                            BorderThickness="{TemplateBinding BorderThickness}" />
                                                    <chromes:ButtonChrome x:Name="SelectionChrome"
                                                                          BorderThickness="0"
                                                                          RenderFocused="{TemplateBinding IsFocused}"
                                                                          RenderHighlighted="{TemplateBinding IsMouseOver}"
                                                                          RenderNormal="False"
                                                                          RenderSelected="{TemplateBinding IsSelected}" />
                                                    <Border x:Name="SelectedVisual"
                                                            Background="{DynamicResource {x:Static brushes:BrushSet.SelectedBrushKey}}"
                                                            Visibility="Collapsed" />
                                                    <Border x:Name="MouseOverVisual"
                                                            Background="{DynamicResource {x:Static brushes:BrushSet.SelectedBrushKey}}"
                                                            Visibility="Collapsed" />
                                                    <ContentPresenter x:Name="Content"
                                                                      Margin="{TemplateBinding Padding}"
                                                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                                    <Border x:Name="Today"
                                                            BorderBrush="{DynamicResource {x:Static brushes:BrushSet.AlternativeAccentBorderBrushKey}}"
                                                            BorderThickness="1"
                                                            Visibility="Collapsed" />
                                                </Grid>
                                                <VisualStateManager.VisualStateGroups>
                                                    <VisualStateGroup x:Name="CommonStates">
                                                        <VisualState x:Name="Disabled">
                                                            <Storyboard>
                                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="LayoutRoot" Storyboard.TargetProperty="Opacity">
                                                                    <DiscreteDoubleKeyFrame KeyTime="0" Value="0.5" />
                                                                </DoubleAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState x:Name="Normal">
                                                            <Storyboard>
                                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="LayoutRoot" Storyboard.TargetProperty="Opacity">
                                                                    <DiscreteDoubleKeyFrame KeyTime="0" Value="1" />
                                                                </DoubleAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState x:Name="MouseOver">
                                                            <Storyboard>
                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MouseOverVisual" Storyboard.TargetProperty="Visibility">
                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                        <DiscreteObjectKeyFrame.Value>
                                                                            <Visibility>Visible</Visibility>
                                                                        </DiscreteObjectKeyFrame.Value>
                                                                    </DiscreteObjectKeyFrame>
                                                                </ObjectAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState x:Name="IsInAnotherView" />
                                                        <VisualState x:Name="IsNotFromCurrentView">
                                                            <Storyboard>
                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Content" Storyboard.TargetProperty="(TextElement.Foreground)">
                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                        <DiscreteObjectKeyFrame.Value>
                                                                            <SolidColorBrush Color="#FF797878" />
                                                                        </DiscreteObjectKeyFrame.Value>
                                                                    </DiscreteObjectKeyFrame>
                                                                </ObjectAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </VisualState>
                                                    </VisualStateGroup>
                                                    <VisualStateGroup x:Name="ButtonType">
                                                        <VisualState x:Name="Year" />
                                                        <VisualState x:Name="Decade" />
                                                        <VisualState x:Name="Date" />
                                                        <VisualState x:Name="WeekName">
                                                            <Storyboard>
                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SelectionChrome" Storyboard.TargetProperty="Visibility">
                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                        <DiscreteObjectKeyFrame.Value>
                                                                            <Visibility>Collapsed</Visibility>
                                                                        </DiscreteObjectKeyFrame.Value>
                                                                    </DiscreteObjectKeyFrame>
                                                                </ObjectAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState x:Name="WeekNumber">
                                                            <Storyboard>
                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Content" Storyboard.TargetProperty="(TextElement.Foreground)">
                                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{DynamicResource {x:Static brushes:BrushSet.AccentForegroundBrushKey}}" />
                                                                </ObjectAnimationUsingKeyFrames>
                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SelectionChrome" Storyboard.TargetProperty="Visibility">
                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                        <DiscreteObjectKeyFrame.Value>
                                                                            <Visibility>Collapsed</Visibility>
                                                                        </DiscreteObjectKeyFrame.Value>
                                                                    </DiscreteObjectKeyFrame>
                                                                </ObjectAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState x:Name="TodayDate">
                                                            <Storyboard>
                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Today" Storyboard.TargetProperty="Visibility">
                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                        <DiscreteObjectKeyFrame.Value>
                                                                            <Visibility>Visible</Visibility>
                                                                        </DiscreteObjectKeyFrame.Value>
                                                                    </DiscreteObjectKeyFrame>
                                                                </ObjectAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState x:Name="Month" />
                                                    </VisualStateGroup>
                                                    <VisualStateGroup x:Name="FocusStates">
                                                        <VisualState x:Name="Unfocused" />
                                                        <VisualState x:Name="Focused">
                                                            <Storyboard>
                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SelectionChrome" Storyboard.TargetProperty="BorderThickness">
                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                        <DiscreteObjectKeyFrame.Value>
                                                                            <Thickness>0</Thickness>
                                                                        </DiscreteObjectKeyFrame.Value>
                                                                    </DiscreteObjectKeyFrame>
                                                                </ObjectAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </VisualState>
                                                    </VisualStateGroup>
                                                    <VisualStateGroup x:Name="SelectionStates">
                                                        <VisualState x:Name="Unselected" />
                                                        <VisualState x:Name="Selected">
                                                            <Storyboard>
                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SelectedVisual" Storyboard.TargetProperty="Visibility">
                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                        <DiscreteObjectKeyFrame.Value>
                                                                            <Visibility>Visible</Visibility>
                                                                        </DiscreteObjectKeyFrame.Value>
                                                                    </DiscreteObjectKeyFrame>
                                                                </ObjectAnimationUsingKeyFrames>
                                                                <DoubleAnimation Duration="0"
                                                                                 Storyboard.TargetName="MouseOverVisual"
                                                                                 Storyboard.TargetProperty="Opacity"
                                                                                 To="0" />
                                                            </Storyboard>
                                                        </VisualState>
                                                    </VisualStateGroup>
                                                </VisualStateManager.VisualStateGroups>
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Setter.Value>
                    </Setter>

                    <Setter Property="DecadeButtonStyle">
                        <Setter.Value>
                            <Style TargetType="{x:Type calendar:CalendarButton}">
                                <Setter Property="Padding" Value="0" />
                                <Setter Property="HorizontalContentAlignment" Value="Center" />
                                <Setter Property="VerticalContentAlignment" Value="Center" />
                                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type calendar:CalendarButton}">
                                            <Border x:Name="LayoutRoot" Background="Transparent">
                                                <Grid>
                                                    <Border Background="{TemplateBinding Background}"
                                                            BorderBrush="{TemplateBinding BorderBrush}"
                                                            BorderThickness="{TemplateBinding BorderThickness}" />
                                                    <chromes:ButtonChrome x:Name="SelectionChrome"
                                                                          BorderThickness="0"
                                                                          RenderFocused="{TemplateBinding IsFocused}"
                                                                          RenderHighlighted="{TemplateBinding IsMouseOver}"
                                                                          RenderNormal="False"
                                                                          RenderSelected="{TemplateBinding IsSelected}" />
                                                    <Border x:Name="SelectedVisual"
                                                            Background="{DynamicResource {x:Static brushes:BrushSet.SelectedBrushKey}}"
                                                            Visibility="Collapsed" />
                                                    <Border x:Name="MouseOverVisual"
                                                            Background="{DynamicResource {x:Static brushes:BrushSet.SelectedBrushKey}}"
                                                            Visibility="Collapsed" />
                                                    <ContentPresenter x:Name="Content"
                                                                      Margin="{TemplateBinding Padding}"
                                                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                                    <Border x:Name="Today"
                                                            BorderBrush="{DynamicResource {x:Static brushes:BrushSet.AlternativeAccentBorderBrushKey}}"
                                                            BorderThickness="1"
                                                            Visibility="Collapsed" />
                                                </Grid>
                                                <VisualStateManager.VisualStateGroups>
                                                    <VisualStateGroup x:Name="CommonStates">
                                                        <VisualState x:Name="Disabled">
                                                            <Storyboard>
                                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="LayoutRoot" Storyboard.TargetProperty="Opacity">
                                                                    <DiscreteDoubleKeyFrame KeyTime="0" Value="0.5" />
                                                                </DoubleAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState x:Name="Normal">
                                                            <Storyboard>
                                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="LayoutRoot" Storyboard.TargetProperty="Opacity">
                                                                    <DiscreteDoubleKeyFrame KeyTime="0" Value="1" />
                                                                </DoubleAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState x:Name="MouseOver">
                                                            <Storyboard>
                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MouseOverVisual" Storyboard.TargetProperty="Visibility">
                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                        <DiscreteObjectKeyFrame.Value>
                                                                            <Visibility>Visible</Visibility>
                                                                        </DiscreteObjectKeyFrame.Value>
                                                                    </DiscreteObjectKeyFrame>
                                                                </ObjectAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState x:Name="IsInAnotherView" />
                                                        <VisualState x:Name="IsNotFromCurrentView">
                                                            <Storyboard>
                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Content" Storyboard.TargetProperty="(TextElement.Foreground)">
                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                        <DiscreteObjectKeyFrame.Value>
                                                                            <SolidColorBrush Color="#FF797878" />
                                                                        </DiscreteObjectKeyFrame.Value>
                                                                    </DiscreteObjectKeyFrame>
                                                                </ObjectAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </VisualState>
                                                    </VisualStateGroup>
                                                    <VisualStateGroup x:Name="ButtonType">
                                                        <VisualState x:Name="Year" />
                                                        <VisualState x:Name="Decade" />
                                                        <VisualState x:Name="Date" />
                                                        <VisualState x:Name="WeekName">
                                                            <Storyboard>
                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SelectionChrome" Storyboard.TargetProperty="Visibility">
                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                        <DiscreteObjectKeyFrame.Value>
                                                                            <Visibility>Collapsed</Visibility>
                                                                        </DiscreteObjectKeyFrame.Value>
                                                                    </DiscreteObjectKeyFrame>
                                                                </ObjectAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState x:Name="WeekNumber">
                                                            <Storyboard>
                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Content" Storyboard.TargetProperty="(TextElement.Foreground)">
                                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{DynamicResource {x:Static brushes:BrushSet.AccentForegroundBrushKey}}" />
                                                                </ObjectAnimationUsingKeyFrames>
                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SelectionChrome" Storyboard.TargetProperty="Visibility">
                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                        <DiscreteObjectKeyFrame.Value>
                                                                            <Visibility>Collapsed</Visibility>
                                                                        </DiscreteObjectKeyFrame.Value>
                                                                    </DiscreteObjectKeyFrame>
                                                                </ObjectAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState x:Name="TodayDate">
                                                            <Storyboard>
                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Today" Storyboard.TargetProperty="Visibility">
                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                        <DiscreteObjectKeyFrame.Value>
                                                                            <Visibility>Visible</Visibility>
                                                                        </DiscreteObjectKeyFrame.Value>
                                                                    </DiscreteObjectKeyFrame>
                                                                </ObjectAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState x:Name="Month" />
                                                    </VisualStateGroup>
                                                    <VisualStateGroup x:Name="FocusStates">
                                                        <VisualState x:Name="Unfocused" />
                                                        <VisualState x:Name="Focused">
                                                            <Storyboard>
                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SelectionChrome" Storyboard.TargetProperty="BorderThickness">
                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                        <DiscreteObjectKeyFrame.Value>
                                                                            <Thickness>0</Thickness>
                                                                        </DiscreteObjectKeyFrame.Value>
                                                                    </DiscreteObjectKeyFrame>
                                                                </ObjectAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </VisualState>
                                                    </VisualStateGroup>
                                                    <VisualStateGroup x:Name="SelectionStates">
                                                        <VisualState x:Name="Unselected" />
                                                        <VisualState x:Name="Selected">
                                                            <Storyboard>
                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SelectedVisual" Storyboard.TargetProperty="Visibility">
                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                        <DiscreteObjectKeyFrame.Value>
                                                                            <Visibility>Visible</Visibility>
                                                                        </DiscreteObjectKeyFrame.Value>
                                                                    </DiscreteObjectKeyFrame>
                                                                </ObjectAnimationUsingKeyFrames>
                                                                <DoubleAnimation Duration="0"
                                                                                 Storyboard.TargetName="MouseOverVisual"
                                                                                 Storyboard.TargetProperty="Opacity"
                                                                                 To="0" />
                                                            </Storyboard>
                                                        </VisualState>
                                                    </VisualStateGroup>
                                                </VisualStateManager.VisualStateGroups>
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Setter.Value>
                    </Setter>

                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type telerik:RadCalendar}">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="*" />
                                    </Grid.RowDefinitions>
                                    <Border x:Name="Background"
                                            Grid.RowSpan="2"
                                            Background="{TemplateBinding Background}"
                                            BorderThickness="{TemplateBinding BorderThickness}" />
                                    <Border x:Name="OuterBorder"
                                            Grid.RowSpan="2"
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="{TemplateBinding BorderThickness}"
                                            CornerRadius="0">
                                        <Border x:Name="InnerBorder"
                                                BorderBrush="Transparent"
                                                BorderThickness="1"
                                                CornerRadius="0" />
                                    </Border>
                                    <Border x:Name="Navigation"
                                            Margin="0 0 0 -1"
                                            Background="{TemplateBinding Background}"
                                            BorderBrush="Transparent"
                                            BorderThickness="0"
                                            Canvas.ZIndex="2"
                                            CornerRadius="0"
                                            Visibility="{TemplateBinding HeaderVisibility}">
                                        <Border BorderBrush="Transparent"
                                                BorderThickness="0"
                                                CornerRadius="0"
                                                Padding="{TemplateBinding Padding}">
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto" />
                                                    <ColumnDefinition Width="*" />
                                                    <ColumnDefinition Width="Auto" />
                                                </Grid.ColumnDefinitions>
                                                <RepeatButton x:Name="MoveLeft"
                                                              Grid.Column="0"
                                                              Margin="4"
                                                              IsTabStop="False">
                                                    <RepeatButton.Style>
                                                        <Style TargetType="{x:Type RepeatButton}">
                                                            <Setter Property="Template">
                                                                <Setter.Value>
                                                                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                        <Grid>
                                                                            <Border x:Name="Background"
                                                                                    Background="{TemplateBinding Background}"
                                                                                    BorderBrush="{TemplateBinding BorderBrush}"
                                                                                    BorderThickness="{TemplateBinding BorderThickness}" />
                                                                            <Border x:Name="MouseOverVisual"
                                                                                    Background="{DynamicResource {x:Static brushes:BrushSet.AccentBackgroundBrushKey}}"
                                                                                    BorderThickness="{TemplateBinding BorderThickness}"
                                                                                    Visibility="Collapsed" />
                                                                            <Path x:Name="Icon"
                                                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                                  Data="M 3.18,7 C3.18,7 5,7 5,7 5,7 1.81,3.5 1.81,3.5 1.81,3.5 5,0 5,0 5,0 3.18,0 3.18,0 3.18,0 0,3.5 0,3.5 0,3.5 3.18,7 3.18,7 Z"
                                                                                  Fill="{DynamicResource {x:Static brushes:BrushSet.MarkBrushKey}}"
                                                                                  Stretch="None" />
                                                                            <VisualStateManager.VisualStateGroups>
                                                                                <VisualStateGroup x:Name="CommonStates">
                                                                                    <VisualState x:Name="Disabled">
                                                                                        <Storyboard>
                                                                                            <DoubleAnimation Duration="0"
                                                                                                             Storyboard.TargetName="Icon"
                                                                                                             Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                                                             To="0.2" />
                                                                                        </Storyboard>
                                                                                    </VisualState>
                                                                                    <VisualState x:Name="Normal" />
                                                                                    <VisualState x:Name="MouseOver">
                                                                                        <Storyboard>
                                                                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MouseOverVisual" Storyboard.TargetProperty="Visibility">
                                                                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                    <DiscreteObjectKeyFrame.Value>
                                                                                                        <Visibility>Visible</Visibility>
                                                                                                    </DiscreteObjectKeyFrame.Value>
                                                                                                </DiscreteObjectKeyFrame>
                                                                                            </ObjectAnimationUsingKeyFrames>

                                                                                        </Storyboard>
                                                                                    </VisualState>
                                                                                    <VisualState x:Name="Pressed" />
                                                                                </VisualStateGroup>
                                                                            </VisualStateManager.VisualStateGroups>
                                                                        </Grid>
                                                                    </ControlTemplate>
                                                                </Setter.Value>
                                                            </Setter>
                                                            <Style.BasedOn>
                                                                <Style TargetType="{x:Type RepeatButton}">
                                                                    <Setter Property="MinWidth" Value="25" />
                                                                    <Setter Property="MinHeight" Value="25" />
                                                                    <Setter Property="BorderBrush" Value="Transparent" />
                                                                    <Setter Property="Background" Value="Transparent" />
                                                                    <Setter Property="IsTabStop" Value="False" />
                                                                </Style>
                                                            </Style.BasedOn>
                                                        </Style>
                                                    </RepeatButton.Style>
                                                </RepeatButton>
                                                <Button x:Name="Header"
                                                        Grid.Column="1"
                                                        Margin="0,4"
                                                        IsTabStop="False">
                                                    <Button.Style>
                                                        <Style TargetType="{x:Type Button}">
                                                            <Setter Property="Template">
                                                                <Setter.Value>
                                                                    <ControlTemplate TargetType="{x:Type Button}">
                                                                        <Grid>
                                                                            <Border x:Name="Background"
                                                                                    Background="{TemplateBinding Background}"
                                                                                    BorderBrush="{TemplateBinding BorderBrush}"
                                                                                    BorderThickness="{TemplateBinding BorderThickness}" />
                                                                            <Border x:Name="MouseOverVisual"
                                                                                    Background="{DynamicResource {x:Static brushes:BrushSet.AccentBackgroundBrushKey}}"
                                                                                    BorderThickness="{TemplateBinding BorderThickness}"
                                                                                    CornerRadius="1"
                                                                                    Visibility="Collapsed" />
                                                                            <TextBlock x:Name="Content"
                                                                                       Margin="{TemplateBinding Padding}"
                                                                                       HorizontalAlignment="Center"
                                                                                       VerticalAlignment="Center"
                                                                                       FontWeight="Regular"
                                                                                       Foreground="{DynamicResource {x:Static brushes:BrushSet.AccentForegroundBrushKey}}"
                                                                                       Text="{TemplateBinding Content}" />
                                                                            <VisualStateManager.VisualStateGroups>
                                                                                <VisualStateGroup x:Name="CommonStates">
                                                                                    <VisualState x:Name="Disabled" />
                                                                                    <VisualState x:Name="Normal" />
                                                                                    <VisualState x:Name="MouseOver">
                                                                                        <Storyboard>
                                                                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MouseOverVisual" Storyboard.TargetProperty="(UIElement.Visibility)">
                                                                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                    <DiscreteObjectKeyFrame.Value>
                                                                                                        <Visibility>Visible</Visibility>
                                                                                                    </DiscreteObjectKeyFrame.Value>
                                                                                                </DiscreteObjectKeyFrame>
                                                                                            </ObjectAnimationUsingKeyFrames>
                                                                                        </Storyboard>
                                                                                    </VisualState>
                                                                                    <VisualState x:Name="Pressed" />
                                                                                </VisualStateGroup>
                                                                            </VisualStateManager.VisualStateGroups>
                                                                        </Grid>
                                                                    </ControlTemplate>
                                                                </Setter.Value>
                                                            </Setter>
                                                            <Setter Property="BorderBrush" Value="Transparent" />
                                                            <Setter Property="Background" Value="Transparent" />
                                                            <Setter Property="Margin" Value="2" />
                                                            <Setter Property="IsTabStop" Value="False" />
                                                        </Style>
                                                    </Button.Style>
                                                </Button>
                                                <RepeatButton x:Name="MoveRight"
                                                              Grid.Column="2"
                                                              Margin="4"
                                                              IsTabStop="False">
                                                    <RepeatButton.Style>
                                                        <Style TargetType="{x:Type RepeatButton}">
                                                            <Setter Property="Template">
                                                                <Setter.Value>
                                                                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                        <Grid>
                                                                            <Border x:Name="Background"
                                                                                    Background="{TemplateBinding Background}"
                                                                                    BorderBrush="{TemplateBinding BorderBrush}"
                                                                                    BorderThickness="{TemplateBinding BorderThickness}" />
                                                                            <Border x:Name="MouseOverVisual"
                                                                                    Background="{DynamicResource {x:Static brushes:BrushSet.AccentBackgroundBrushKey}}"
                                                                                    BorderThickness="{TemplateBinding BorderThickness}"
                                                                                    Visibility="Collapsed" />
                                                                            <Path x:Name="Icon"
                                                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                                  Data="M 1.81,7 C1.81,7 0,7 0,7 0,7 3.18,3.5 3.18,3.5 3.18,3.5 0,0 0,0 0,0 1.81,0 1.81,0 1.81,0 5,3.5 5,3.5 5,3.5 1.81,7 1.81,7 Z"
                                                                                  Fill="{DynamicResource {x:Static brushes:BrushSet.MarkBrushKey}}"
                                                                                  Stretch="None" />
                                                                            <VisualStateManager.VisualStateGroups>
                                                                                <VisualStateGroup x:Name="CommonStates">
                                                                                    <VisualState x:Name="Disabled">
                                                                                        <Storyboard>
                                                                                            <DoubleAnimation Duration="0"
                                                                                                             Storyboard.TargetName="Icon"
                                                                                                             Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                                                             To="0.2" />
                                                                                        </Storyboard>
                                                                                    </VisualState>
                                                                                    <VisualState x:Name="Normal" />
                                                                                    <VisualState x:Name="MouseOver">
                                                                                        <Storyboard>
                                                                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MouseOverVisual" Storyboard.TargetProperty="Visibility">
                                                                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                    <DiscreteObjectKeyFrame.Value>
                                                                                                        <Visibility>Visible</Visibility>
                                                                                                    </DiscreteObjectKeyFrame.Value>
                                                                                                </DiscreteObjectKeyFrame>
                                                                                            </ObjectAnimationUsingKeyFrames>

                                                                                        </Storyboard>
                                                                                    </VisualState>
                                                                                    <VisualState x:Name="Pressed" />
                                                                                </VisualStateGroup>
                                                                            </VisualStateManager.VisualStateGroups>
                                                                        </Grid>
                                                                    </ControlTemplate>
                                                                </Setter.Value>
                                                            </Setter>
                                                            <Style.BasedOn>
                                                                <Style TargetType="{x:Type RepeatButton}">
                                                                    <Setter Property="MinWidth" Value="25" />
                                                                    <Setter Property="MinHeight" Value="25" />
                                                                    <Setter Property="BorderBrush" Value="Transparent" />
                                                                    <Setter Property="Background" Value="Transparent" />
                                                                    <Setter Property="IsTabStop" Value="False" />
                                                                </Style>
                                                            </Style.BasedOn>
                                                        </Style>
                                                    </RepeatButton.Style>
                                                </RepeatButton>
                                            </Grid>
                                        </Border>
                                    </Border>
                                    <calendar:TransitionPanel x:Name="TransitionPanel"
                                                              Grid.Row="1"
                                                              ClipToBounds="True">
                                        <telerik:RadUniformGrid x:Name="MonthViews"
                                                                Margin="1 1 0 0"
                                                                Columns="{TemplateBinding Columns}"
                                                                Rows="{TemplateBinding Rows}" />
                                        <telerik:RadUniformGrid x:Name="YearViews"
                                                                Margin="1 1 0 0"
                                                                Columns="{TemplateBinding Columns}"
                                                                Rows="{TemplateBinding Rows}"
                                                                Visibility="Collapsed" />
                                        <telerik:RadUniformGrid x:Name="DecadeViews"
                                                                Margin="1 1 0 0"
                                                                Columns="{TemplateBinding Columns}"
                                                                Rows="{TemplateBinding Rows}"
                                                                Visibility="Collapsed" />
                                        <telerik:RadUniformGrid x:Name="CenturyViews"
                                                                Margin="1 1 0 0"
                                                                Columns="{TemplateBinding Columns}"
                                                                Rows="{TemplateBinding Rows}"
                                                                Visibility="Collapsed" />
                                    </calendar:TransitionPanel>
                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="MonthViewPanel">
                        <Setter.Value>
                            <ItemsPanelTemplate>
                                <calendar:CalendarPanel VerticalAlignment="Stretch"
                                                        Columns="8"
                                                        FirstColumn="1"
                                                        IsItemsHost="True"
                                                        PreserveSpaceForCollapsedChildren="True"
                                                        Rows="7" />
                            </ItemsPanelTemplate>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="YearViewPanel">
                        <Setter.Value>
                            <ItemsPanelTemplate>
                                <calendar:CalendarPanel VerticalAlignment="Stretch"
                                                        Columns="4"
                                                        IsItemsHost="True"
                                                        PreserveSpaceForCollapsedChildren="True"
                                                        Rows="3" />
                            </ItemsPanelTemplate>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="DecadeViewPanel">
                        <Setter.Value>
                            <ItemsPanelTemplate>
                                <calendar:CalendarPanel VerticalAlignment="Stretch"
                                                        Columns="4"
                                                        IsItemsHost="True"
                                                        PreserveSpaceForCollapsedChildren="True"
                                                        Rows="3" />
                            </ItemsPanelTemplate>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="CenturyViewPanel">
                        <Setter.Value>
                            <ItemsPanelTemplate>
                                <calendar:CalendarPanel VerticalAlignment="Stretch"
                                                        Columns="4"
                                                        IsItemsHost="True"
                                                        PreserveSpaceForCollapsedChildren="True"
                                                        Rows="3" />
                            </ItemsPanelTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="KeyboardNavigation.TabNavigation" Value="Once" />
        <Setter Property="KeyboardNavigation.ControlTabNavigation" Value="Cycle" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Validation.ErrorTemplate" Value="{StaticResource ValidationErrorTemplate}" />
        <Setter Property="FontStyle" Value="Normal" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="MinHeight" Value="25" />
        <Setter Property="Padding" Value="5" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="DateTimeWatermarkTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock Opacity="1" Text="{Binding}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="AllowParsingWithoutSeparator" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type telerik:RadDatePicker}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Name="TextColumn" Width="*" />
                            <ColumnDefinition x:Name="ButtonsColumn" Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Border x:Name="Background"
                                Grid.ColumnSpan="2"
                                Background="{DynamicResource {x:Static brushes:BrushSet.AccentBackgroundBrushKey}}"
                                BorderBrush="{DynamicResource {x:Static brushes:BrushSet.BorderBrushKey}}"
                                BorderThickness="2" />
                        <Border x:Name="DropDownOpenBorder"
                                Grid.ColumnSpan="2"
                                IsHitTestVisible="False"
                                Visibility="Collapsed" />
                        <Border x:Name="ReadOnly"
                                Grid.ColumnSpan="2"
                                Background="{DynamicResource {x:Static brushes:BrushSet.BorderBrushKey}}">
                            <Border.Visibility>
                                <Binding Path="IsReadOnly" RelativeSource="{RelativeSource TemplatedParent}">
                                    <Binding.Converter>
                                        <telerik:BooleanToVisibilityConverter />
                                    </Binding.Converter>
                                </Binding>
                            </Border.Visibility>
                        </Border>

                        <Border x:Name="BackgroundDisabled" Visibility="Collapsed">
                            <Border.Background>
                                <SolidColorBrush Opacity="0.3" Color="#424242" />
                            </Border.Background>
                        </Border>
                        <Popup x:Name="PART_InputPopup"
                               telerik:PopupExtensions.IsOpen="{Binding IsTooltipOpen,
                                                                        Mode=TwoWay,
                                                                        RelativeSource={RelativeSource TemplatedParent}}"
                               telerik:PopupExtensions.Owner="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                               telerik:PopupExtensions.Placement="Top"
                               telerik:PopupExtensions.PlacementTarget="{Binding ElementName=PART_DateTimeInput}"
                               AllowsTransparency="True"
                               Placement="Top"
                               StaysOpen="False">
                            <ContentPresenter Content="{TemplateBinding TooltipContent}" ContentTemplate="{TemplateBinding TooltipTemplate}" />
                        </Popup>
                        <telerik:RadWatermarkTextBox x:Name="PART_DateTimeInput"
                                                     Grid.Column="0"
                                                     MinHeight="0"
                                                     VerticalAlignment="Stretch"
                                                     VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                     CurrentText="{Binding CurrentDateTimeText,
                                                                           Mode=TwoWay,
                                                                           RelativeSource={RelativeSource TemplatedParent}}"
                                                     Foreground="{DynamicResource {x:Static brushes:BrushSet.ForegroundBrushKey}}"
                                                     IsReadOnly="{TemplateBinding IsReadOnly}"
                                                     Padding="{TemplateBinding Padding}"
                                                     SelectionOnFocus="{TemplateBinding SelectionOnFocus}"
                                                     TabIndex="0"
                                                     Text="{Binding DateTimeText,
                                                                    Mode=TwoWay,
                                                                    RelativeSource={RelativeSource TemplatedParent}}"
                                                     TextAlignment="Right"
                                                     WatermarkContent="{TemplateBinding DateTimeWatermarkContent}"
                                                     WatermarkTemplate="{TemplateBinding DateTimeWatermarkTemplate}">
                            <telerik:RadWatermarkTextBox.Style>
                                <Style TargetType="{x:Type telerik:RadWatermarkTextBox}">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type telerik:RadWatermarkTextBox}">
                                                <Grid x:Name="RootElement" Cursor="IBeam">
                                                    <Border x:Name="Border"
                                                            Background="Transparent"
                                                            Opacity="1" />
                                                    <ScrollViewer x:Name="PART_ContentHost"
                                                                  Margin="{TemplateBinding BorderThickness}"
                                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                  Cursor="Arrow"
                                                                  IsTabStop="False"
                                                                  Padding="{TemplateBinding Padding}"
                                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                    <ContentControl x:Name="WatermarkVisualElement"
                                                                    Margin="2,0,0,0"
                                                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                    Content="{TemplateBinding WatermarkContent}"
                                                                    ContentTemplate="{TemplateBinding WatermarkTemplate}"
                                                                    Foreground="{TemplateBinding Foreground}"
                                                                    IsHitTestVisible="False"
                                                                    IsTabStop="False"
                                                                    Opacity="0.5"
                                                                    Padding="{TemplateBinding Padding}">
                                                        <ContentControl.Template>
                                                            <ControlTemplate TargetType="{x:Type ContentControl}">
                                                                <ContentPresenter Margin="{TemplateBinding Padding}"
                                                                                  Content="{TemplateBinding Content}"
                                                                                  ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                                                  ContentTemplate="{TemplateBinding ContentTemplate}" />
                                                            </ControlTemplate>
                                                        </ContentControl.Template>
                                                    </ContentControl>
                                                    <VisualStateManager.VisualStateGroups>
                                                        <VisualStateGroup x:Name="CommonStates">
                                                            <VisualState x:Name="Normal" />
                                                            <VisualState x:Name="MouseOver" />
                                                            <VisualState x:Name="Disabled" />
                                                            <VisualState x:Name="ReadOnly" />
                                                        </VisualStateGroup>
                                                        <VisualStateGroup x:Name="FocusStates">
                                                            <VisualState x:Name="Focused" />
                                                            <VisualState x:Name="Unfocused" />
                                                        </VisualStateGroup>
                                                        <VisualStateGroup x:Name="WatermarkStates">
                                                            <VisualState x:Name="WatermarkHidden">
                                                                <Storyboard>
                                                                    <DoubleAnimation Duration="0"
                                                                                     Storyboard.TargetName="WatermarkVisualElement"
                                                                                     Storyboard.TargetProperty="Opacity"
                                                                                     To="0" />
                                                                </Storyboard>
                                                            </VisualState>
                                                            <VisualState x:Name="WatermarkVisible" />
                                                        </VisualStateGroup>
                                                    </VisualStateManager.VisualStateGroups>
                                                </Grid>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </telerik:RadWatermarkTextBox.Style>
                        </telerik:RadWatermarkTextBox>

                        <telerik:RadDropDownButton x:Name="PART_DropDownButton"
                                                   Grid.Column="1"
                                                   telerik:DateTimePickerExtensions.FocusContentOnOpen="True"
                                                   CloseOnEnter="True"
                                                   IsOpen="{Binding IsDropDownOpen,
                                                                    Mode=TwoWay,
                                                                    RelativeSource={RelativeSource TemplatedParent}}"
                                                   IsTabStop="False"
                                                   PopupPlacementTarget="{Binding ElementName=PART_DateTimeInput}"
                                                   TabIndex="1">
                            <telerik:RadDropDownButton.DropDownContent>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>

                                    <telerik:RadCalendar x:Name="PART_Calendar"
                                                         BlackoutDates="{Binding BlackoutDates,
                                                                                 Mode=TwoWay,
                                                                                 RelativeSource={RelativeSource TemplatedParent}}"
                                                         Culture="{TemplateBinding Culture}"
                                                         DateSelectionMode="{TemplateBinding DateSelectionMode}"
                                                         DisplayDate="{Binding DisplayDate,
                                                                               Mode=TwoWay,
                                                                               RelativeSource={RelativeSource TemplatedParent}}"
                                                         DisplayDateEnd="{Binding DisplayDateEnd,
                                                                                  Mode=TwoWay,
                                                                                  RelativeSource={RelativeSource TemplatedParent}}"
                                                         DisplayDateStart="{Binding DisplayDateStart,
                                                                                    Mode=TwoWay,
                                                                                    RelativeSource={RelativeSource TemplatedParent}}"
                                                         IsReadOnly="{TemplateBinding IsReadOnly}"
                                                         SelectableDateEnd="{Binding SelectableDateEnd,
                                                                                     Mode=TwoWay,
                                                                                     RelativeSource={RelativeSource TemplatedParent}}"
                                                         SelectableDateStart="{Binding SelectableDateStart,
                                                                                       Mode=TwoWay,
                                                                                       RelativeSource={RelativeSource TemplatedParent}}"
                                                         SelectedDate="{Binding SelectedDate,
                                                                                Mode=TwoWay,
                                                                                RelativeSource={RelativeSource TemplatedParent}}"
                                                         SelectionMode="Single"
                                                         Style="{TemplateBinding CalendarStyle}" />

                                    <telerik:DateTimePickerClock x:Name="PART_Clock"
                                                                 Grid.Column="1"
                                                                 CanKeyboardNavigationSelectItems="{x:Null}"
                                                                 Culture="{TemplateBinding Culture}"
                                                                 EndTime="{TemplateBinding EndTime}"
                                                                 IsReadOnly="{TemplateBinding IsReadOnly}"
                                                                 IsTabStop="False"
                                                                 IsTextSearchEnabled="True"
                                                                 SelectedItem="{Binding SelectedTime,
                                                                                        Mode=TwoWay,
                                                                                        RelativeSource={RelativeSource TemplatedParent}}"
                                                                 SelectedValueBinding="{x:Null}"
                                                                 StartTime="{TemplateBinding StartTime}"
                                                                 Style="{TemplateBinding ClockStyle}"
                                                                 TextBinding="{x:Null}"
                                                                 TimeInterval="{TemplateBinding TimeInterval}" />
                                </Grid>
                            </telerik:RadDropDownButton.DropDownContent>

                            <telerik:RadDropDownButton.Style>
                                <Style TargetType="{x:Type telerik:RadDropDownButton}">
                                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                    <Setter Property="VerticalContentAlignment" Value="Center" />
                                    <Setter Property="IsTabStop" Value="True" />
                                    <Setter Property="Background" Value="Transparent" />
                                    <Setter Property="BorderThickness" Value="1" />
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type telerik:RadDropDownButton}">
                                                <Grid>
                                                    <Border x:Name="Background"
                                                            MinWidth="25"
                                                            Background="{DynamicResource {x:Static brushes:BrushSet.BorderBrushKey}}"
                                                            BorderBrush="{DynamicResource {x:Static brushes:BrushSet.BorderBrushKey}}"
                                                            BorderThickness="2"
                                                            SnapsToDevicePixels="True" />
                                                    <Border x:Name="BackgroundChecked"
                                                            MinWidth="25"
                                                            Background="{DynamicResource {x:Static brushes:BrushSet.AlternativeBackgroundBrushKey}}"
                                                            BorderBrush="{DynamicResource {x:Static brushes:BrushSet.BorderBrushKey}}"
                                                            BorderThickness="2"
                                                            SnapsToDevicePixels="True"
                                                            Visibility="Collapsed" />
                                                    <Path x:Name="Icon"
                                                          Width="8"
                                                          Height="8"
                                                          Data="M6,6L8,6 8,8 6,8z M3,6L5,6 5,8 3,8z M0,6L2,6 2,8 0,8z M6,3L8,3 8,5 6,5z M3,3L5,3 5,5 3,5z M0,3L2,3 2,5 0,5z M6,0L8,0 8,2 6,2z M3,0L5,0 5,2 3,2z M0,0L2,0 2,2 0,2z"
                                                          Fill="{DynamicResource {x:Static brushes:BrushSet.MarkBrushKey}}"
                                                          SnapsToDevicePixels="True" />
                                                    <Path x:Name="IconChecked"
                                                          Width="8"
                                                          Height="8"
                                                          Data="M6,6L8,6 8,8 6,8z M3,6L5,6 5,8 3,8z M0,6L2,6 2,8 0,8z M6,3L8,3 8,5 6,5z M3,3L5,3 5,5 3,5z M0,3L2,3 2,5 0,5z M6,0L8,0 8,2 6,2z M3,0L5,0 5,2 3,2z M0,0L2,0 2,2 0,2z"
                                                          Fill="{DynamicResource {x:Static brushes:BrushSet.MarkBrushKey}}"
                                                          SnapsToDevicePixels="True"
                                                          Visibility="Collapsed" />
                                                    <Popup x:Name="DropDownPopup"
                                                           Focusable="False"
                                                           IsOpen="{Binding IsOpen,
                                                                            RelativeSource={RelativeSource TemplatedParent}}"
                                                           Placement="Bottom"
                                                           StaysOpen="False">
                                                        <Border BorderBrush="{DynamicResource {x:Static brushes:BrushSet.BorderBrushKey}}" BorderThickness="2">
                                                            <ContentPresenter x:Name="DropDownPopupContent"
                                                                              Content="{TemplateBinding DropDownContent}"
                                                                              ContentTemplate="{TemplateBinding DropDownContentTemplate}" />
                                                        </Border>
                                                    </Popup>
                                                    <Border x:Name="BackgroundDisabled"
                                                            MinWidth="25"
                                                            Visibility="Collapsed">
                                                        <Border.Background>
                                                            <SolidColorBrush Opacity="0.3" Color="#424242" />
                                                        </Border.Background>
                                                    </Border>
                                                    <VisualStateManager.VisualStateGroups>
                                                        <VisualStateGroup x:Name="CommonStates">
                                                            <VisualState x:Name="Normal" />
                                                            <VisualState x:Name="MouseOver" />
                                                            <VisualState x:Name="Pressed">
                                                                <Storyboard>
                                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Background" Storyboard.TargetProperty="(Panel.Background)">
                                                                        <DiscreteObjectKeyFrame KeyTime="0">
                                                                            <DiscreteObjectKeyFrame.Value>
                                                                                <SolidColorBrush Color="#484848" />
                                                                            </DiscreteObjectKeyFrame.Value>
                                                                        </DiscreteObjectKeyFrame>
                                                                    </ObjectAnimationUsingKeyFrames>
                                                                </Storyboard>
                                                            </VisualState>
                                                            <VisualState x:Name="Disabled">
                                                                <Storyboard>
                                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BackgroundDisabled" Storyboard.TargetProperty="(UIElement.Visibility)">
                                                                        <DiscreteObjectKeyFrame KeyTime="0">
                                                                            <DiscreteObjectKeyFrame.Value>
                                                                                <Visibility>Visible</Visibility>
                                                                            </DiscreteObjectKeyFrame.Value>
                                                                        </DiscreteObjectKeyFrame>
                                                                    </ObjectAnimationUsingKeyFrames>
                                                                </Storyboard>
                                                            </VisualState>
                                                        </VisualStateGroup>
                                                        <VisualStateGroup x:Name="FocusStates">
                                                            <VisualState x:Name="Unfocused" />
                                                            <VisualState x:Name="Focused" />
                                                        </VisualStateGroup>
                                                        <VisualStateGroup x:Name="IsOpenedState">
                                                            <VisualState x:Name="Closed" />
                                                            <VisualState x:Name="Opened">
                                                                <Storyboard>
                                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BackgroundChecked" Storyboard.TargetProperty="(UIElement.Visibility)">
                                                                        <DiscreteObjectKeyFrame KeyTime="0">
                                                                            <DiscreteObjectKeyFrame.Value>
                                                                                <Visibility>Visible</Visibility>
                                                                            </DiscreteObjectKeyFrame.Value>
                                                                        </DiscreteObjectKeyFrame>
                                                                    </ObjectAnimationUsingKeyFrames>
                                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="IconChecked" Storyboard.TargetProperty="(UIElement.Visibility)">
                                                                        <DiscreteObjectKeyFrame KeyTime="0">
                                                                            <DiscreteObjectKeyFrame.Value>
                                                                                <Visibility>Visible</Visibility>
                                                                            </DiscreteObjectKeyFrame.Value>
                                                                        </DiscreteObjectKeyFrame>
                                                                    </ObjectAnimationUsingKeyFrames>
                                                                </Storyboard>
                                                            </VisualState>
                                                            <VisualState x:Name="Indeterminate" />
                                                        </VisualStateGroup>
                                                        <VisualStateGroup x:Name="DropDownButtonPosition">
                                                            <VisualState x:Name="DropDownButtonAtLeft" />
                                                            <VisualState x:Name="DropDownButtonAtTop" />
                                                            <VisualState x:Name="DropDownButtonAtRight" />
                                                            <VisualState x:Name="DropDownButtonAtBottom" />
                                                        </VisualStateGroup>
                                                        <VisualStateGroup x:Name="PopupPlacementState">
                                                            <VisualState x:Name="PlacementBottom" />
                                                            <VisualState x:Name="PlacementTop" />
                                                            <VisualState x:Name="PlacementLeft" />
                                                            <VisualState x:Name="PlacementRight" />
                                                        </VisualStateGroup>
                                                    </VisualStateManager.VisualStateGroups>
                                                </Grid>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </telerik:RadDropDownButton.Style>
                        </telerik:RadDropDownButton>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BackgroundDisabled" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="DropDownOpen">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Background" Storyboard.TargetProperty="(Border.BorderBrush)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <SolidColorBrush Color="#FF1A1A1A" />
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Background" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DropDownOpenBorder" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused" />
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="InputTypeStates">
                                <VisualState x:Name="DateTimePicker">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Clock" Storyboard.TargetProperty="(FrameworkElement.Margin)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Thickness>-1,0,0,0</Thickness>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="DatePicker">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Clock" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="TimePicker">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Calendar" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type telerik:RadDateTimePicker}">
        <Setter Property="CalendarStyle">
            <Setter.Value>
                <Style TargetType="{x:Type telerik:RadCalendar}">
                    <Setter Property="Columns" Value="1" />
                    <Setter Property="Rows" Value="1" />
                    <Setter Property="Background" Value="{DynamicResource {x:Static brushes:BrushSet.AccentBackgroundBrushKey}}" />
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static brushes:BrushSet.ForegroundBrushKey}}" />
                    <Setter Property="MonthViewStyle">
                        <Setter.Value>
                            <Style TargetType="{x:Type calendar:CalendarView}">
                                <Setter Property="HorizontalContentAlignment" Value="Center" />
                                <Setter Property="VerticalContentAlignment" Value="Center" />
                                <Setter Property="Padding" Value="3" />
                                <Setter Property="IsTabStop" Value="False" />
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type calendar:CalendarView}">
                                            <Grid>
                                                <Grid x:Name="WeekHeaders">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="*" />
                                                        <ColumnDefinition Width="7*" />
                                                    </Grid.ColumnDefinitions>
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition Height="*" />
                                                        <RowDefinition Height="6*" />
                                                    </Grid.RowDefinitions>
                                                    <Rectangle x:Name="VerticalBackground"
                                                               Grid.RowSpan="2"
                                                               Panel.ZIndex="0"
                                                               Fill="{DynamicResource {x:Static brushes:BrushSet.AlternativeForegroundBrushKey}}">
                                                        <Rectangle.Visibility>
                                                            <Binding Path="HideColumn" RelativeSource="{RelativeSource TemplatedParent}">
                                                                <Binding.Converter>
                                                                    <telerik:InvertedBooleanToVisibilityConverter />
                                                                </Binding.Converter>
                                                            </Binding>
                                                        </Rectangle.Visibility>
                                                    </Rectangle>
                                                    <Rectangle x:Name="HorizontalBackground"
                                                               Grid.ColumnSpan="2"
                                                               Panel.ZIndex="0"
                                                               Fill="{DynamicResource {x:Static brushes:BrushSet.AlternativeForegroundBrushKey}}">
                                                        <Rectangle.Visibility>
                                                            <Binding Path="HideRow" RelativeSource="{RelativeSource TemplatedParent}">
                                                                <Binding.Converter>
                                                                    <telerik:InvertedBooleanToVisibilityConverter />
                                                                </Binding.Converter>
                                                            </Binding>
                                                        </Rectangle.Visibility>
                                                    </Rectangle>
                                                </Grid>
                                                <ItemsPresenter />
                                                <Rectangle x:Name="MinDesiredSize"
                                                           Width="240"
                                                           Height="155" />
                                            </Grid>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Margin" Value="0" />
                            </Style>
                        </Setter.Value>
                    </Setter>

                    <Setter Property="DayButtonStyle">
                        <Setter.Value>
                            <Style TargetType="{x:Type calendar:CalendarButton}">
                                <Setter Property="Padding" Value="0" />
                                <Setter Property="HorizontalContentAlignment" Value="Center" />
                                <Setter Property="VerticalContentAlignment" Value="Center" />
                                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type calendar:CalendarButton}">
                                            <Border x:Name="LayoutRoot" Background="Transparent">
                                                <Grid>
                                                    <Border Background="{TemplateBinding Background}"
                                                            BorderBrush="{TemplateBinding BorderBrush}"
                                                            BorderThickness="{TemplateBinding BorderThickness}" />
                                                    <chromes:ButtonChrome x:Name="SelectionChrome"
                                                                          BorderThickness="0"
                                                                          RenderFocused="{TemplateBinding IsFocused}"
                                                                          RenderHighlighted="{TemplateBinding IsMouseOver}"
                                                                          RenderNormal="False"
                                                                          RenderSelected="{TemplateBinding IsSelected}" />
                                                    <Border x:Name="SelectedVisual"
                                                            Background="{DynamicResource {x:Static brushes:BrushSet.SelectedBrushKey}}"
                                                            Visibility="Collapsed" />
                                                    <Border x:Name="MouseOverVisual"
                                                            Background="{DynamicResource {x:Static brushes:BrushSet.SelectedBrushKey}}"
                                                            Visibility="Collapsed" />
                                                    <ContentPresenter x:Name="Content"
                                                                      Margin="{TemplateBinding Padding}"
                                                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                                    <Border x:Name="Today"
                                                            BorderBrush="{DynamicResource {x:Static brushes:BrushSet.AlternativeAccentBorderBrushKey}}"
                                                            BorderThickness="1"
                                                            Visibility="Collapsed" />
                                                </Grid>
                                                <VisualStateManager.VisualStateGroups>
                                                    <VisualStateGroup x:Name="CommonStates">
                                                        <VisualState x:Name="Disabled">
                                                            <Storyboard>
                                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="LayoutRoot" Storyboard.TargetProperty="Opacity">
                                                                    <DiscreteDoubleKeyFrame KeyTime="0" Value="0.5" />
                                                                </DoubleAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState x:Name="Normal">
                                                            <Storyboard>
                                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="LayoutRoot" Storyboard.TargetProperty="Opacity">
                                                                    <DiscreteDoubleKeyFrame KeyTime="0" Value="1" />
                                                                </DoubleAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState x:Name="MouseOver">
                                                            <Storyboard>
                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MouseOverVisual" Storyboard.TargetProperty="Visibility">
                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                        <DiscreteObjectKeyFrame.Value>
                                                                            <Visibility>Visible</Visibility>
                                                                        </DiscreteObjectKeyFrame.Value>
                                                                    </DiscreteObjectKeyFrame>
                                                                </ObjectAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState x:Name="IsInAnotherView" />
                                                        <VisualState x:Name="IsNotFromCurrentView">
                                                            <Storyboard>
                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Content" Storyboard.TargetProperty="(TextElement.Foreground)">
                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                        <DiscreteObjectKeyFrame.Value>
                                                                            <SolidColorBrush Color="#FF797878" />
                                                                        </DiscreteObjectKeyFrame.Value>
                                                                    </DiscreteObjectKeyFrame>
                                                                </ObjectAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </VisualState>
                                                    </VisualStateGroup>
                                                    <VisualStateGroup x:Name="ButtonType">
                                                        <VisualState x:Name="Year" />
                                                        <VisualState x:Name="Decade" />
                                                        <VisualState x:Name="Date" />
                                                        <VisualState x:Name="WeekName">
                                                            <Storyboard>
                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SelectionChrome" Storyboard.TargetProperty="Visibility">
                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                        <DiscreteObjectKeyFrame.Value>
                                                                            <Visibility>Collapsed</Visibility>
                                                                        </DiscreteObjectKeyFrame.Value>
                                                                    </DiscreteObjectKeyFrame>
                                                                </ObjectAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState x:Name="WeekNumber">
                                                            <Storyboard>
                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Content" Storyboard.TargetProperty="(TextElement.Foreground)">
                                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{DynamicResource {x:Static brushes:BrushSet.AccentForegroundBrushKey}}" />
                                                                </ObjectAnimationUsingKeyFrames>
                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SelectionChrome" Storyboard.TargetProperty="Visibility">
                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                        <DiscreteObjectKeyFrame.Value>
                                                                            <Visibility>Collapsed</Visibility>
                                                                        </DiscreteObjectKeyFrame.Value>
                                                                    </DiscreteObjectKeyFrame>
                                                                </ObjectAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState x:Name="TodayDate">
                                                            <Storyboard>
                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Today" Storyboard.TargetProperty="Visibility">
                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                        <DiscreteObjectKeyFrame.Value>
                                                                            <Visibility>Visible</Visibility>
                                                                        </DiscreteObjectKeyFrame.Value>
                                                                    </DiscreteObjectKeyFrame>
                                                                </ObjectAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState x:Name="Month" />
                                                    </VisualStateGroup>
                                                    <VisualStateGroup x:Name="FocusStates">
                                                        <VisualState x:Name="Unfocused" />
                                                        <VisualState x:Name="Focused">
                                                            <Storyboard>
                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SelectionChrome" Storyboard.TargetProperty="BorderThickness">
                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                        <DiscreteObjectKeyFrame.Value>
                                                                            <Thickness>0</Thickness>
                                                                        </DiscreteObjectKeyFrame.Value>
                                                                    </DiscreteObjectKeyFrame>
                                                                </ObjectAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </VisualState>
                                                    </VisualStateGroup>
                                                    <VisualStateGroup x:Name="SelectionStates">
                                                        <VisualState x:Name="Unselected" />
                                                        <VisualState x:Name="Selected">
                                                            <Storyboard>
                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SelectedVisual" Storyboard.TargetProperty="Visibility">
                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                        <DiscreteObjectKeyFrame.Value>
                                                                            <Visibility>Visible</Visibility>
                                                                        </DiscreteObjectKeyFrame.Value>
                                                                    </DiscreteObjectKeyFrame>
                                                                </ObjectAnimationUsingKeyFrames>
                                                                <DoubleAnimation Duration="0"
                                                                                 Storyboard.TargetName="MouseOverVisual"
                                                                                 Storyboard.TargetProperty="Opacity"
                                                                                 To="0" />
                                                            </Storyboard>
                                                        </VisualState>
                                                    </VisualStateGroup>
                                                </VisualStateManager.VisualStateGroups>
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Setter.Value>
                    </Setter>

                    <Setter Property="MonthButtonStyle">
                        <Setter.Value>
                            <Style TargetType="{x:Type calendar:CalendarButton}">
                                <Setter Property="Padding" Value="0" />
                                <Setter Property="HorizontalContentAlignment" Value="Center" />
                                <Setter Property="VerticalContentAlignment" Value="Center" />
                                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type calendar:CalendarButton}">
                                            <Border x:Name="LayoutRoot" Background="Transparent">
                                                <Grid>
                                                    <Border Background="{TemplateBinding Background}"
                                                            BorderBrush="{TemplateBinding BorderBrush}"
                                                            BorderThickness="{TemplateBinding BorderThickness}" />
                                                    <chromes:ButtonChrome x:Name="SelectionChrome"
                                                                          BorderThickness="0"
                                                                          RenderFocused="{TemplateBinding IsFocused}"
                                                                          RenderHighlighted="{TemplateBinding IsMouseOver}"
                                                                          RenderNormal="False"
                                                                          RenderSelected="{TemplateBinding IsSelected}" />
                                                    <Border x:Name="SelectedVisual"
                                                            Background="{DynamicResource {x:Static brushes:BrushSet.SelectedBrushKey}}"
                                                            Visibility="Collapsed" />
                                                    <Border x:Name="MouseOverVisual"
                                                            Background="{DynamicResource {x:Static brushes:BrushSet.SelectedBrushKey}}"
                                                            Visibility="Collapsed" />
                                                    <ContentPresenter x:Name="Content"
                                                                      Margin="{TemplateBinding Padding}"
                                                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                                    <Border x:Name="Today"
                                                            BorderBrush="{DynamicResource {x:Static brushes:BrushSet.AlternativeAccentBorderBrushKey}}"
                                                            BorderThickness="1"
                                                            Visibility="Collapsed" />
                                                </Grid>
                                                <VisualStateManager.VisualStateGroups>
                                                    <VisualStateGroup x:Name="CommonStates">
                                                        <VisualState x:Name="Disabled">
                                                            <Storyboard>
                                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="LayoutRoot" Storyboard.TargetProperty="Opacity">
                                                                    <DiscreteDoubleKeyFrame KeyTime="0" Value="0.5" />
                                                                </DoubleAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState x:Name="Normal">
                                                            <Storyboard>
                                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="LayoutRoot" Storyboard.TargetProperty="Opacity">
                                                                    <DiscreteDoubleKeyFrame KeyTime="0" Value="1" />
                                                                </DoubleAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState x:Name="MouseOver">
                                                            <Storyboard>
                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MouseOverVisual" Storyboard.TargetProperty="Visibility">
                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                        <DiscreteObjectKeyFrame.Value>
                                                                            <Visibility>Visible</Visibility>
                                                                        </DiscreteObjectKeyFrame.Value>
                                                                    </DiscreteObjectKeyFrame>
                                                                </ObjectAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState x:Name="IsInAnotherView" />
                                                        <VisualState x:Name="IsNotFromCurrentView">
                                                            <Storyboard>
                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Content" Storyboard.TargetProperty="(TextElement.Foreground)">
                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                        <DiscreteObjectKeyFrame.Value>
                                                                            <SolidColorBrush Color="#FF797878" />
                                                                        </DiscreteObjectKeyFrame.Value>
                                                                    </DiscreteObjectKeyFrame>
                                                                </ObjectAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </VisualState>
                                                    </VisualStateGroup>
                                                    <VisualStateGroup x:Name="ButtonType">
                                                        <VisualState x:Name="Year" />
                                                        <VisualState x:Name="Decade" />
                                                        <VisualState x:Name="Date" />
                                                        <VisualState x:Name="WeekName">
                                                            <Storyboard>
                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SelectionChrome" Storyboard.TargetProperty="Visibility">
                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                        <DiscreteObjectKeyFrame.Value>
                                                                            <Visibility>Collapsed</Visibility>
                                                                        </DiscreteObjectKeyFrame.Value>
                                                                    </DiscreteObjectKeyFrame>
                                                                </ObjectAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState x:Name="WeekNumber">
                                                            <Storyboard>
                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Content" Storyboard.TargetProperty="(TextElement.Foreground)">
                                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{DynamicResource {x:Static brushes:BrushSet.AccentForegroundBrushKey}}" />
                                                                </ObjectAnimationUsingKeyFrames>
                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SelectionChrome" Storyboard.TargetProperty="Visibility">
                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                        <DiscreteObjectKeyFrame.Value>
                                                                            <Visibility>Collapsed</Visibility>
                                                                        </DiscreteObjectKeyFrame.Value>
                                                                    </DiscreteObjectKeyFrame>
                                                                </ObjectAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState x:Name="TodayDate">
                                                            <Storyboard>
                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Today" Storyboard.TargetProperty="Visibility">
                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                        <DiscreteObjectKeyFrame.Value>
                                                                            <Visibility>Visible</Visibility>
                                                                        </DiscreteObjectKeyFrame.Value>
                                                                    </DiscreteObjectKeyFrame>
                                                                </ObjectAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState x:Name="Month" />
                                                    </VisualStateGroup>
                                                    <VisualStateGroup x:Name="FocusStates">
                                                        <VisualState x:Name="Unfocused" />
                                                        <VisualState x:Name="Focused">
                                                            <Storyboard>
                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SelectionChrome" Storyboard.TargetProperty="BorderThickness">
                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                        <DiscreteObjectKeyFrame.Value>
                                                                            <Thickness>0</Thickness>
                                                                        </DiscreteObjectKeyFrame.Value>
                                                                    </DiscreteObjectKeyFrame>
                                                                </ObjectAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </VisualState>
                                                    </VisualStateGroup>
                                                    <VisualStateGroup x:Name="SelectionStates">
                                                        <VisualState x:Name="Unselected" />
                                                        <VisualState x:Name="Selected">
                                                            <Storyboard>
                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SelectedVisual" Storyboard.TargetProperty="Visibility">
                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                        <DiscreteObjectKeyFrame.Value>
                                                                            <Visibility>Visible</Visibility>
                                                                        </DiscreteObjectKeyFrame.Value>
                                                                    </DiscreteObjectKeyFrame>
                                                                </ObjectAnimationUsingKeyFrames>
                                                                <DoubleAnimation Duration="0"
                                                                                 Storyboard.TargetName="MouseOverVisual"
                                                                                 Storyboard.TargetProperty="Opacity"
                                                                                 To="0" />
                                                            </Storyboard>
                                                        </VisualState>
                                                    </VisualStateGroup>
                                                </VisualStateManager.VisualStateGroups>
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Setter.Value>
                    </Setter>

                    <Setter Property="YearButtonStyle">
                        <Setter.Value>
                            <Style TargetType="{x:Type calendar:CalendarButton}">
                                <Setter Property="Padding" Value="0" />
                                <Setter Property="HorizontalContentAlignment" Value="Center" />
                                <Setter Property="VerticalContentAlignment" Value="Center" />
                                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type calendar:CalendarButton}">
                                            <Border x:Name="LayoutRoot" Background="Transparent">
                                                <Grid>
                                                    <Border Background="{TemplateBinding Background}"
                                                            BorderBrush="{TemplateBinding BorderBrush}"
                                                            BorderThickness="{TemplateBinding BorderThickness}" />
                                                    <chromes:ButtonChrome x:Name="SelectionChrome"
                                                                          BorderThickness="0"
                                                                          RenderFocused="{TemplateBinding IsFocused}"
                                                                          RenderHighlighted="{TemplateBinding IsMouseOver}"
                                                                          RenderNormal="False"
                                                                          RenderSelected="{TemplateBinding IsSelected}" />
                                                    <Border x:Name="SelectedVisual"
                                                            Background="{DynamicResource {x:Static brushes:BrushSet.SelectedBrushKey}}"
                                                            Visibility="Collapsed" />
                                                    <Border x:Name="MouseOverVisual"
                                                            Background="{DynamicResource {x:Static brushes:BrushSet.SelectedBrushKey}}"
                                                            Visibility="Collapsed" />
                                                    <ContentPresenter x:Name="Content"
                                                                      Margin="{TemplateBinding Padding}"
                                                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                                    <Border x:Name="Today"
                                                            BorderBrush="{DynamicResource {x:Static brushes:BrushSet.AlternativeAccentBorderBrushKey}}"
                                                            BorderThickness="1"
                                                            Visibility="Collapsed" />
                                                </Grid>
                                                <VisualStateManager.VisualStateGroups>
                                                    <VisualStateGroup x:Name="CommonStates">
                                                        <VisualState x:Name="Disabled">
                                                            <Storyboard>
                                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="LayoutRoot" Storyboard.TargetProperty="Opacity">
                                                                    <DiscreteDoubleKeyFrame KeyTime="0" Value="0.5" />
                                                                </DoubleAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState x:Name="Normal">
                                                            <Storyboard>
                                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="LayoutRoot" Storyboard.TargetProperty="Opacity">
                                                                    <DiscreteDoubleKeyFrame KeyTime="0" Value="1" />
                                                                </DoubleAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState x:Name="MouseOver">
                                                            <Storyboard>
                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MouseOverVisual" Storyboard.TargetProperty="Visibility">
                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                        <DiscreteObjectKeyFrame.Value>
                                                                            <Visibility>Visible</Visibility>
                                                                        </DiscreteObjectKeyFrame.Value>
                                                                    </DiscreteObjectKeyFrame>
                                                                </ObjectAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState x:Name="IsInAnotherView" />
                                                        <VisualState x:Name="IsNotFromCurrentView">
                                                            <Storyboard>
                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Content" Storyboard.TargetProperty="(TextElement.Foreground)">
                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                        <DiscreteObjectKeyFrame.Value>
                                                                            <SolidColorBrush Color="#FF797878" />
                                                                        </DiscreteObjectKeyFrame.Value>
                                                                    </DiscreteObjectKeyFrame>
                                                                </ObjectAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </VisualState>
                                                    </VisualStateGroup>
                                                    <VisualStateGroup x:Name="ButtonType">
                                                        <VisualState x:Name="Year" />
                                                        <VisualState x:Name="Decade" />
                                                        <VisualState x:Name="Date" />
                                                        <VisualState x:Name="WeekName">
                                                            <Storyboard>
                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SelectionChrome" Storyboard.TargetProperty="Visibility">
                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                        <DiscreteObjectKeyFrame.Value>
                                                                            <Visibility>Collapsed</Visibility>
                                                                        </DiscreteObjectKeyFrame.Value>
                                                                    </DiscreteObjectKeyFrame>
                                                                </ObjectAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState x:Name="WeekNumber">
                                                            <Storyboard>
                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Content" Storyboard.TargetProperty="(TextElement.Foreground)">
                                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{DynamicResource {x:Static brushes:BrushSet.AccentForegroundBrushKey}}" />
                                                                </ObjectAnimationUsingKeyFrames>
                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SelectionChrome" Storyboard.TargetProperty="Visibility">
                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                        <DiscreteObjectKeyFrame.Value>
                                                                            <Visibility>Collapsed</Visibility>
                                                                        </DiscreteObjectKeyFrame.Value>
                                                                    </DiscreteObjectKeyFrame>
                                                                </ObjectAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState x:Name="TodayDate">
                                                            <Storyboard>
                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Today" Storyboard.TargetProperty="Visibility">
                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                        <DiscreteObjectKeyFrame.Value>
                                                                            <Visibility>Visible</Visibility>
                                                                        </DiscreteObjectKeyFrame.Value>
                                                                    </DiscreteObjectKeyFrame>
                                                                </ObjectAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState x:Name="Month" />
                                                    </VisualStateGroup>
                                                    <VisualStateGroup x:Name="FocusStates">
                                                        <VisualState x:Name="Unfocused" />
                                                        <VisualState x:Name="Focused">
                                                            <Storyboard>
                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SelectionChrome" Storyboard.TargetProperty="BorderThickness">
                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                        <DiscreteObjectKeyFrame.Value>
                                                                            <Thickness>0</Thickness>
                                                                        </DiscreteObjectKeyFrame.Value>
                                                                    </DiscreteObjectKeyFrame>
                                                                </ObjectAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </VisualState>
                                                    </VisualStateGroup>
                                                    <VisualStateGroup x:Name="SelectionStates">
                                                        <VisualState x:Name="Unselected" />
                                                        <VisualState x:Name="Selected">
                                                            <Storyboard>
                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SelectedVisual" Storyboard.TargetProperty="Visibility">
                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                        <DiscreteObjectKeyFrame.Value>
                                                                            <Visibility>Visible</Visibility>
                                                                        </DiscreteObjectKeyFrame.Value>
                                                                    </DiscreteObjectKeyFrame>
                                                                </ObjectAnimationUsingKeyFrames>
                                                                <DoubleAnimation Duration="0"
                                                                                 Storyboard.TargetName="MouseOverVisual"
                                                                                 Storyboard.TargetProperty="Opacity"
                                                                                 To="0" />
                                                            </Storyboard>
                                                        </VisualState>
                                                    </VisualStateGroup>
                                                </VisualStateManager.VisualStateGroups>
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Setter.Value>
                    </Setter>

                    <Setter Property="DecadeButtonStyle">
                        <Setter.Value>
                            <Style TargetType="{x:Type calendar:CalendarButton}">
                                <Setter Property="Padding" Value="0" />
                                <Setter Property="HorizontalContentAlignment" Value="Center" />
                                <Setter Property="VerticalContentAlignment" Value="Center" />
                                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type calendar:CalendarButton}">
                                            <Border x:Name="LayoutRoot" Background="Transparent">
                                                <Grid>
                                                    <Border Background="{TemplateBinding Background}"
                                                            BorderBrush="{TemplateBinding BorderBrush}"
                                                            BorderThickness="{TemplateBinding BorderThickness}" />
                                                    <chromes:ButtonChrome x:Name="SelectionChrome"
                                                                          BorderThickness="0"
                                                                          RenderFocused="{TemplateBinding IsFocused}"
                                                                          RenderHighlighted="{TemplateBinding IsMouseOver}"
                                                                          RenderNormal="False"
                                                                          RenderSelected="{TemplateBinding IsSelected}" />
                                                    <Border x:Name="SelectedVisual"
                                                            Background="{DynamicResource {x:Static brushes:BrushSet.SelectedBrushKey}}"
                                                            Visibility="Collapsed" />
                                                    <Border x:Name="MouseOverVisual"
                                                            Background="{DynamicResource {x:Static brushes:BrushSet.SelectedBrushKey}}"
                                                            Visibility="Collapsed" />
                                                    <ContentPresenter x:Name="Content"
                                                                      Margin="{TemplateBinding Padding}"
                                                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                                    <Border x:Name="Today"
                                                            BorderBrush="{DynamicResource {x:Static brushes:BrushSet.AlternativeAccentBorderBrushKey}}"
                                                            BorderThickness="1"
                                                            Visibility="Collapsed" />
                                                </Grid>
                                                <VisualStateManager.VisualStateGroups>
                                                    <VisualStateGroup x:Name="CommonStates">
                                                        <VisualState x:Name="Disabled">
                                                            <Storyboard>
                                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="LayoutRoot" Storyboard.TargetProperty="Opacity">
                                                                    <DiscreteDoubleKeyFrame KeyTime="0" Value="0.5" />
                                                                </DoubleAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState x:Name="Normal">
                                                            <Storyboard>
                                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="LayoutRoot" Storyboard.TargetProperty="Opacity">
                                                                    <DiscreteDoubleKeyFrame KeyTime="0" Value="1" />
                                                                </DoubleAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState x:Name="MouseOver">
                                                            <Storyboard>
                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MouseOverVisual" Storyboard.TargetProperty="Visibility">
                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                        <DiscreteObjectKeyFrame.Value>
                                                                            <Visibility>Visible</Visibility>
                                                                        </DiscreteObjectKeyFrame.Value>
                                                                    </DiscreteObjectKeyFrame>
                                                                </ObjectAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState x:Name="IsInAnotherView" />
                                                        <VisualState x:Name="IsNotFromCurrentView">
                                                            <Storyboard>
                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Content" Storyboard.TargetProperty="(TextElement.Foreground)">
                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                        <DiscreteObjectKeyFrame.Value>
                                                                            <SolidColorBrush Color="#FF797878" />
                                                                        </DiscreteObjectKeyFrame.Value>
                                                                    </DiscreteObjectKeyFrame>
                                                                </ObjectAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </VisualState>
                                                    </VisualStateGroup>
                                                    <VisualStateGroup x:Name="ButtonType">
                                                        <VisualState x:Name="Year" />
                                                        <VisualState x:Name="Decade" />
                                                        <VisualState x:Name="Date" />
                                                        <VisualState x:Name="WeekName">
                                                            <Storyboard>
                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SelectionChrome" Storyboard.TargetProperty="Visibility">
                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                        <DiscreteObjectKeyFrame.Value>
                                                                            <Visibility>Collapsed</Visibility>
                                                                        </DiscreteObjectKeyFrame.Value>
                                                                    </DiscreteObjectKeyFrame>
                                                                </ObjectAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState x:Name="WeekNumber">
                                                            <Storyboard>
                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Content" Storyboard.TargetProperty="(TextElement.Foreground)">
                                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{DynamicResource {x:Static brushes:BrushSet.AccentForegroundBrushKey}}" />
                                                                </ObjectAnimationUsingKeyFrames>
                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SelectionChrome" Storyboard.TargetProperty="Visibility">
                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                        <DiscreteObjectKeyFrame.Value>
                                                                            <Visibility>Collapsed</Visibility>
                                                                        </DiscreteObjectKeyFrame.Value>
                                                                    </DiscreteObjectKeyFrame>
                                                                </ObjectAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState x:Name="TodayDate">
                                                            <Storyboard>
                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Today" Storyboard.TargetProperty="Visibility">
                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                        <DiscreteObjectKeyFrame.Value>
                                                                            <Visibility>Visible</Visibility>
                                                                        </DiscreteObjectKeyFrame.Value>
                                                                    </DiscreteObjectKeyFrame>
                                                                </ObjectAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState x:Name="Month" />
                                                    </VisualStateGroup>
                                                    <VisualStateGroup x:Name="FocusStates">
                                                        <VisualState x:Name="Unfocused" />
                                                        <VisualState x:Name="Focused">
                                                            <Storyboard>
                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SelectionChrome" Storyboard.TargetProperty="BorderThickness">
                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                        <DiscreteObjectKeyFrame.Value>
                                                                            <Thickness>0</Thickness>
                                                                        </DiscreteObjectKeyFrame.Value>
                                                                    </DiscreteObjectKeyFrame>
                                                                </ObjectAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </VisualState>
                                                    </VisualStateGroup>
                                                    <VisualStateGroup x:Name="SelectionStates">
                                                        <VisualState x:Name="Unselected" />
                                                        <VisualState x:Name="Selected">
                                                            <Storyboard>
                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SelectedVisual" Storyboard.TargetProperty="Visibility">
                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                        <DiscreteObjectKeyFrame.Value>
                                                                            <Visibility>Visible</Visibility>
                                                                        </DiscreteObjectKeyFrame.Value>
                                                                    </DiscreteObjectKeyFrame>
                                                                </ObjectAnimationUsingKeyFrames>
                                                                <DoubleAnimation Duration="0"
                                                                                 Storyboard.TargetName="MouseOverVisual"
                                                                                 Storyboard.TargetProperty="Opacity"
                                                                                 To="0" />
                                                            </Storyboard>
                                                        </VisualState>
                                                    </VisualStateGroup>
                                                </VisualStateManager.VisualStateGroups>
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Setter.Value>
                    </Setter>

                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type telerik:RadCalendar}">
                                <HeaderedContentControl HorizontalContentAlignment="Stretch"
                                                        VerticalContentAlignment="Center"
                                                        Background="{TemplateBinding Background}"
                                                        Padding="{TemplateBinding Padding}">
                                    <HeaderedContentControl.Header>
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto" />
                                                <ColumnDefinition Width="*" />
                                                <ColumnDefinition Width="Auto" />
                                            </Grid.ColumnDefinitions>
                                            <RepeatButton x:Name="MoveLeft"
                                                          Grid.Column="0"
                                                          Margin="4"
                                                          IsTabStop="False">
                                                <RepeatButton.Style>
                                                    <Style TargetType="{x:Type RepeatButton}">
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                    <Grid>
                                                                        <Border x:Name="Background"
                                                                                Background="{TemplateBinding Background}"
                                                                                BorderBrush="{TemplateBinding BorderBrush}"
                                                                                BorderThickness="{TemplateBinding BorderThickness}" />
                                                                        <Border x:Name="MouseOverVisual"
                                                                                Background="{DynamicResource {x:Static brushes:BrushSet.SelectedBrushKey}}"
                                                                                BorderThickness="{TemplateBinding BorderThickness}"
                                                                                Visibility="Collapsed" />
                                                                        <Path x:Name="Icon"
                                                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                              Data="M 3.18,7 C3.18,7 5,7 5,7 5,7 1.81,3.5 1.81,3.5 1.81,3.5 5,0 5,0 5,0 3.18,0 3.18,0 3.18,0 0,3.5 0,3.5 0,3.5 3.18,7 3.18,7 Z"
                                                                              Fill="{DynamicResource {x:Static brushes:BrushSet.MarkBrushKey}}"
                                                                              Stretch="None" />
                                                                        <VisualStateManager.VisualStateGroups>
                                                                            <VisualStateGroup x:Name="CommonStates">
                                                                                <VisualState x:Name="Disabled">
                                                                                    <Storyboard>
                                                                                        <DoubleAnimation Duration="0"
                                                                                                         Storyboard.TargetName="Icon"
                                                                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                                                         To="0.2" />
                                                                                    </Storyboard>
                                                                                </VisualState>
                                                                                <VisualState x:Name="Normal" />
                                                                                <VisualState x:Name="MouseOver">
                                                                                    <Storyboard>
                                                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MouseOverVisual" Storyboard.TargetProperty="Visibility">
                                                                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                <DiscreteObjectKeyFrame.Value>
                                                                                                    <Visibility>Visible</Visibility>
                                                                                                </DiscreteObjectKeyFrame.Value>
                                                                                            </DiscreteObjectKeyFrame>
                                                                                        </ObjectAnimationUsingKeyFrames>

                                                                                    </Storyboard>
                                                                                </VisualState>
                                                                                <VisualState x:Name="Pressed" />
                                                                            </VisualStateGroup>
                                                                        </VisualStateManager.VisualStateGroups>
                                                                    </Grid>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                        <Style.BasedOn>
                                                            <Style TargetType="{x:Type RepeatButton}">
                                                                <Setter Property="MinWidth" Value="25" />
                                                                <Setter Property="MinHeight" Value="25" />
                                                                <Setter Property="BorderBrush" Value="Transparent" />
                                                                <Setter Property="Background" Value="Transparent" />
                                                                <Setter Property="IsTabStop" Value="False" />
                                                            </Style>
                                                        </Style.BasedOn>
                                                    </Style>
                                                </RepeatButton.Style>
                                            </RepeatButton>
                                            <Button x:Name="Header"
                                                    Grid.Column="1"
                                                    Margin="0,4"
                                                    IsTabStop="False">
                                                <Button.Style>
                                                    <Style TargetType="{x:Type Button}">
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="{x:Type Button}">
                                                                    <Grid>
                                                                        <Border x:Name="Background"
                                                                                Background="{TemplateBinding Background}"
                                                                                BorderBrush="{TemplateBinding BorderBrush}"
                                                                                BorderThickness="{TemplateBinding BorderThickness}" />
                                                                        <Border x:Name="MouseOverVisual"
                                                                                Background="{DynamicResource {x:Static brushes:BrushSet.AccentBackgroundBrushKey}}"
                                                                                BorderThickness="{TemplateBinding BorderThickness}"
                                                                                CornerRadius="1"
                                                                                Visibility="Collapsed" />
                                                                        <TextBlock x:Name="Content"
                                                                                   Margin="{TemplateBinding Padding}"
                                                                                   HorizontalAlignment="Center"
                                                                                   VerticalAlignment="Center"
                                                                                   FontWeight="Regular"
                                                                                   Foreground="{DynamicResource {x:Static brushes:BrushSet.AccentForegroundBrushKey}}"
                                                                                   Text="{TemplateBinding Content}" />
                                                                        <VisualStateManager.VisualStateGroups>
                                                                            <VisualStateGroup x:Name="CommonStates">
                                                                                <VisualState x:Name="Disabled" />
                                                                                <VisualState x:Name="Normal" />
                                                                                <VisualState x:Name="MouseOver">
                                                                                    <Storyboard>
                                                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MouseOverVisual" Storyboard.TargetProperty="(UIElement.Visibility)">
                                                                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                <DiscreteObjectKeyFrame.Value>
                                                                                                    <Visibility>Visible</Visibility>
                                                                                                </DiscreteObjectKeyFrame.Value>
                                                                                            </DiscreteObjectKeyFrame>
                                                                                        </ObjectAnimationUsingKeyFrames>
                                                                                    </Storyboard>
                                                                                </VisualState>
                                                                                <VisualState x:Name="Pressed" />
                                                                            </VisualStateGroup>
                                                                        </VisualStateManager.VisualStateGroups>
                                                                    </Grid>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                        <Setter Property="BorderBrush" Value="Transparent" />
                                                        <Setter Property="Background" Value="Transparent" />
                                                        <Setter Property="Margin" Value="2" />
                                                        <Setter Property="IsTabStop" Value="False" />
                                                    </Style>
                                                </Button.Style>
                                            </Button>
                                            <RepeatButton x:Name="MoveRight"
                                                          Grid.Column="2"
                                                          Margin="4"
                                                          IsTabStop="False">
                                                <RepeatButton.Style>
                                                    <Style TargetType="{x:Type RepeatButton}">
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                    <Grid>
                                                                        <Border x:Name="Background"
                                                                                Background="{TemplateBinding Background}"
                                                                                BorderBrush="{TemplateBinding BorderBrush}"
                                                                                BorderThickness="{TemplateBinding BorderThickness}" />
                                                                        <Border x:Name="MouseOverVisual"
                                                                                Background="{DynamicResource {x:Static brushes:BrushSet.AlternativeBackgroundBrushKey}}"
                                                                                BorderThickness="{TemplateBinding BorderThickness}"
                                                                                Visibility="Collapsed" />
                                                                        <Path x:Name="Icon"
                                                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                              Data="M 1.81,7 C1.81,7 0,7 0,7 0,7 3.18,3.5 3.18,3.5 3.18,3.5 0,0 0,0 0,0 1.81,0 1.81,0 1.81,0 5,3.5 5,3.5 5,3.5 1.81,7 1.81,7 Z"
                                                                              Fill="{DynamicResource {x:Static brushes:BrushSet.MarkBrushKey}}"
                                                                              Stretch="None" />
                                                                        <VisualStateManager.VisualStateGroups>
                                                                            <VisualStateGroup x:Name="CommonStates">
                                                                                <VisualState x:Name="Disabled">
                                                                                    <Storyboard>
                                                                                        <DoubleAnimation Duration="0"
                                                                                                         Storyboard.TargetName="Icon"
                                                                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                                                         To="0.2" />
                                                                                    </Storyboard>
                                                                                </VisualState>
                                                                                <VisualState x:Name="Normal" />
                                                                                <VisualState x:Name="MouseOver">
                                                                                    <Storyboard>
                                                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MouseOverVisual" Storyboard.TargetProperty="Visibility">
                                                                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                <DiscreteObjectKeyFrame.Value>
                                                                                                    <Visibility>Visible</Visibility>
                                                                                                </DiscreteObjectKeyFrame.Value>
                                                                                            </DiscreteObjectKeyFrame>
                                                                                        </ObjectAnimationUsingKeyFrames>

                                                                                    </Storyboard>
                                                                                </VisualState>
                                                                                <VisualState x:Name="Pressed" />
                                                                            </VisualStateGroup>
                                                                        </VisualStateManager.VisualStateGroups>
                                                                    </Grid>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                        <Style.BasedOn>
                                                            <Style TargetType="{x:Type RepeatButton}">
                                                                <Setter Property="MinWidth" Value="25" />
                                                                <Setter Property="MinHeight" Value="25" />
                                                                <Setter Property="BorderBrush" Value="Transparent" />
                                                                <Setter Property="Background" Value="Transparent" />
                                                                <Setter Property="IsTabStop" Value="False" />
                                                            </Style>
                                                        </Style.BasedOn>
                                                    </Style>
                                                </RepeatButton.Style>
                                            </RepeatButton>
                                        </Grid>
                                    </HeaderedContentControl.Header>
                                    <HeaderedContentControl.Style>
                                        <Style TargetType="{x:Type HeaderedContentControl}">
                                            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                            <Setter Property="VerticalContentAlignment" Value="Stretch" />
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type HeaderedContentControl}">
                                                        <Grid>
                                                            <Grid.RowDefinitions>
                                                                <RowDefinition Height="Auto" />
                                                                <RowDefinition Height="*" />
                                                            </Grid.RowDefinitions>
                                                            <Border Grid.Row="0"
                                                                    MinHeight="32"
                                                                    Background="{TemplateBinding Background}">
                                                                <ContentPresenter Margin="{TemplateBinding Padding}"
                                                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                                  Content="{TemplateBinding Header}"
                                                                                  ContentTemplate="{TemplateBinding HeaderTemplate}" />
                                                            </Border>
                                                            <Border Grid.Row="1" Background="{TemplateBinding Background}">
                                                                <ContentPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                                  Content="{TemplateBinding Content}"
                                                                                  ContentTemplate="{TemplateBinding ContentTemplate}" />
                                                            </Border>
                                                        </Grid>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                            <Setter Property="Padding" Value="0" />
                                            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                                            <Setter Property="IsTabStop" Value="False" />
                                        </Style>
                                    </HeaderedContentControl.Style>
                                    <calendar:TransitionPanel x:Name="TransitionPanel"
                                                              Grid.Row="1"
                                                              ClipToBounds="True"
                                                              SnapsToDevicePixels="True">
                                        <telerik:RadUniformGrid x:Name="MonthViews"
                                                                Columns="{TemplateBinding Columns}"
                                                                Rows="{TemplateBinding Rows}" />
                                        <telerik:RadUniformGrid x:Name="YearViews"
                                                                Columns="{TemplateBinding Columns}"
                                                                Rows="{TemplateBinding Rows}"
                                                                Visibility="Collapsed" />
                                        <telerik:RadUniformGrid x:Name="DecadeViews"
                                                                Columns="{TemplateBinding Columns}"
                                                                Rows="{TemplateBinding Rows}"
                                                                Visibility="Collapsed" />
                                        <telerik:RadUniformGrid x:Name="CenturyViews"
                                                                Columns="{TemplateBinding Columns}"
                                                                Rows="{TemplateBinding Rows}"
                                                                Visibility="Collapsed" />
                                    </calendar:TransitionPanel>
                                </HeaderedContentControl>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="MonthViewPanel">
                        <Setter.Value>
                            <ItemsPanelTemplate>
                                <calendar:CalendarPanel VerticalAlignment="Stretch"
                                                        Columns="8"
                                                        FirstColumn="1"
                                                        IsItemsHost="True"
                                                        PreserveSpaceForCollapsedChildren="True"
                                                        Rows="7" />
                            </ItemsPanelTemplate>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="YearViewPanel">
                        <Setter.Value>
                            <ItemsPanelTemplate>
                                <calendar:CalendarPanel VerticalAlignment="Stretch"
                                                        Columns="4"
                                                        IsItemsHost="True"
                                                        PreserveSpaceForCollapsedChildren="True"
                                                        Rows="3" />
                            </ItemsPanelTemplate>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="DecadeViewPanel">
                        <Setter.Value>
                            <ItemsPanelTemplate>
                                <calendar:CalendarPanel VerticalAlignment="Stretch"
                                                        Columns="4"
                                                        IsItemsHost="True"
                                                        PreserveSpaceForCollapsedChildren="True"
                                                        Rows="3" />
                            </ItemsPanelTemplate>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="CenturyViewPanel">
                        <Setter.Value>
                            <ItemsPanelTemplate>
                                <calendar:CalendarPanel VerticalAlignment="Stretch"
                                                        Columns="4"
                                                        IsItemsHost="True"
                                                        PreserveSpaceForCollapsedChildren="True"
                                                        Rows="3" />
                            </ItemsPanelTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>

        <Setter Property="ClockStyle">
            <Setter.Value>
                <Style TargetType="{x:Type telerik:RadClock}">
                    <Setter Property="HorizontalContentAlignment" Value="Center" />
                    <Setter Property="VerticalContentAlignment" Value="Center" />
                    <Setter Property="BorderBrush" Value="{DynamicResource {x:Static brushes:BrushSet.BorderBrushKey}}" />
                    <Setter Property="Background" Value="{DynamicResource {x:Static brushes:BrushSet.AccentBackgroundBrushKey}}" />
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static brushes:BrushSet.ForegroundBrushKey}}" />
                    <Setter Property="BorderThickness" Value="2,0,0,0" />
                    <Setter Property="Padding" Value="0" />
                    <Setter Property="IsTabStop" Value="True" />
                    <Setter Property="TabIndex" Value="1" />
                    <Setter Property="StartTime" Value="0" />
                    <Setter Property="EndTime" Value="23:59:0" />
                    <Setter Property="KeyboardNavigation.TabNavigation" Value="Once" />
                    <Setter Property="SnapsToDevicePixels" Value="True" />
                    <Setter Property="ItemsPanel">
                        <Setter.Value>
                            <ItemsPanelTemplate>
                                <telerik:RadUniformGrid Columns="4" IsItemsHost="True" />
                            </ItemsPanelTemplate>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="ItemTemplate">
                        <Setter.Value>
                            <DataTemplate>
                                <TextBlock x:Name="ContentText"
                                           HorizontalAlignment="Center"
                                           VerticalAlignment="Center"
                                           Text="{Binding}"
                                           TextAlignment="Center" />
                            </DataTemplate>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type telerik:RadClock}">
                                <Border x:Name="BackgroundVisual"
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}">
                                    <ItemsPresenter />
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="ItemContainerStyle">
                        <Setter.Value>
                            <Style TargetType="telerik:RadClockItem">
                                <Setter Property="HorizontalContentAlignment" Value="Center" />
                                <Setter Property="VerticalContentAlignment" Value="Center" />
                                <Setter Property="BorderThickness" Value="0" />
                                <Setter Property="BorderBrush" Value="Transparent" />
                                <Setter Property="FontSize" Value="12" />
                                <Setter Property="FontFamily" Value="Segoe UI" />
                                <Setter Property="SnapsToDevicePixels" Value="True" />
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="telerik:RadClockItem">
                                            <Grid x:Name="LayoutRoot" Background="Transparent">
                                                <Border x:Name="BackgroundBorder"
                                                        Background="{TemplateBinding Background}"
                                                        BorderBrush="{TemplateBinding BorderBrush}"
                                                        BorderThickness="{TemplateBinding BorderThickness}">
                                                    <ContentPresenter x:Name="Content"
                                                                      Margin="{TemplateBinding Padding}"
                                                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                                </Border>
                                            </Grid>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsEnabled" Value="False">
                                                    <Setter TargetName="BackgroundBorder" Property="Opacity" Value="0.3" />
                                                </Trigger>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter TargetName="BackgroundBorder" Property="Background" Value="{DynamicResource {x:Static brushes:BrushSet.SelectedBrushKey}}" />
                                                </Trigger>
                                                <Trigger Property="IsSelected" Value="True">
                                                    <Setter TargetName="BackgroundBorder" Property="Background" Value="{DynamicResource {x:Static brushes:BrushSet.SelectedBrushKey}}" />
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>

        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="KeyboardNavigation.TabNavigation" Value="Once" />
        <Setter Property="KeyboardNavigation.ControlTabNavigation" Value="Cycle" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Validation.ErrorTemplate" Value="{StaticResource ValidationErrorTemplate}" />
        <Setter Property="FontStyle" Value="Normal" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="MinHeight" Value="25" />
        <Setter Property="Padding" Value="5,7" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="DateTimeWatermarkTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock Opacity="1" Text="{Binding}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type telerik:RadDateTimePicker}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Name="TextColumn" Width="*" />
                            <ColumnDefinition x:Name="ButtonsColumn" Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Border x:Name="Background"
                                Grid.ColumnSpan="2"
                                Background="{DynamicResource {x:Static brushes:BrushSet.AccentBackgroundBrushKey}}"
                                BorderBrush="{DynamicResource {x:Static brushes:BrushSet.BorderBrushKey}}"
                                BorderThickness="2" />
                        <Border x:Name="DropDownOpenBorder"
                                Grid.ColumnSpan="2"
                                IsHitTestVisible="False"
                                Visibility="Collapsed" />
                        <Border x:Name="ReadOnly"
                                Grid.ColumnSpan="2"
                                Background="{DynamicResource {x:Static brushes:BrushSet.AlternativeBackgroundBrushKey}}">
                            <Border.Visibility>
                                <Binding Path="IsReadOnly" RelativeSource="{RelativeSource TemplatedParent}">
                                    <Binding.Converter>
                                        <telerik:BooleanToVisibilityConverter />
                                    </Binding.Converter>
                                </Binding>
                            </Border.Visibility>
                        </Border>

                        <Border x:Name="BackgroundDisabled" Visibility="Collapsed">
                            <Border.Background>
                                <SolidColorBrush Opacity="0.3" Color="#424242" />
                            </Border.Background>
                        </Border>
                        <Popup x:Name="PART_InputPopup"
                               telerik:PopupExtensions.IsOpen="{Binding IsTooltipOpen,
                                                                        Mode=TwoWay,
                                                                        RelativeSource={RelativeSource TemplatedParent}}"
                               telerik:PopupExtensions.Owner="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                               telerik:PopupExtensions.Placement="Top"
                               telerik:PopupExtensions.PlacementTarget="{Binding ElementName=PART_DateTimeInput}"
                               AllowsTransparency="True"
                               Placement="Top"
                               StaysOpen="False">
                            <ContentPresenter Content="{TemplateBinding TooltipContent}" ContentTemplate="{TemplateBinding TooltipTemplate}" />
                        </Popup>
                        <telerik:RadWatermarkTextBox x:Name="PART_DateTimeInput"
                                                     Grid.Column="0"
                                                     MinHeight="0"
                                                     VerticalAlignment="Stretch"
                                                     VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                     CurrentText="{Binding CurrentDateTimeText,
                                                                           Mode=TwoWay,
                                                                           RelativeSource={RelativeSource TemplatedParent}}"
                                                     Foreground="{DynamicResource {x:Static brushes:BrushSet.ForegroundBrushKey}}"
                                                     IsReadOnly="{TemplateBinding IsReadOnly}"
                                                     Padding="{TemplateBinding Padding}"
                                                     SelectionOnFocus="{TemplateBinding SelectionOnFocus}"
                                                     TabIndex="0"
                                                     Text="{Binding DateTimeText,
                                                                    Mode=TwoWay,
                                                                    RelativeSource={RelativeSource TemplatedParent}}"
                                                     TextAlignment="Right"
                                                     WatermarkContent="{TemplateBinding DateTimeWatermarkContent}"
                                                     WatermarkTemplate="{TemplateBinding DateTimeWatermarkTemplate}">
                            <telerik:RadWatermarkTextBox.Style>
                                <Style TargetType="{x:Type telerik:RadWatermarkTextBox}">
                                    <Setter Property="CaretBrush" Value="{DynamicResource {x:Static brushes:BrushSet.ForegroundBrushKey}}" />
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type telerik:RadWatermarkTextBox}">
                                                <Grid x:Name="RootElement" Cursor="IBeam">
                                                    <Border x:Name="Border"
                                                            Background="Transparent"
                                                            Opacity="1" />
                                                    <ScrollViewer x:Name="PART_ContentHost"
                                                                  Margin="{TemplateBinding BorderThickness}"
                                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                  Cursor="Arrow"
                                                                  IsTabStop="False"
                                                                  Padding="{TemplateBinding Padding}"
                                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                    <ContentControl x:Name="WatermarkVisualElement"
                                                                    Margin="2,0,0,0"
                                                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                    Content="{TemplateBinding WatermarkContent}"
                                                                    ContentTemplate="{TemplateBinding WatermarkTemplate}"
                                                                    Foreground="{TemplateBinding Foreground}"
                                                                    IsHitTestVisible="False"
                                                                    IsTabStop="False"
                                                                    Opacity="0.5"
                                                                    Padding="{TemplateBinding Padding}">
                                                        <ContentControl.Template>
                                                            <ControlTemplate TargetType="{x:Type ContentControl}">
                                                                <ContentPresenter Margin="{TemplateBinding Padding}"
                                                                                  Content="{TemplateBinding Content}"
                                                                                  ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                                                  ContentTemplate="{TemplateBinding ContentTemplate}" />
                                                            </ControlTemplate>
                                                        </ContentControl.Template>
                                                    </ContentControl>
                                                    <VisualStateManager.VisualStateGroups>
                                                        <VisualStateGroup x:Name="CommonStates">
                                                            <VisualState x:Name="Normal" />
                                                            <VisualState x:Name="MouseOver" />
                                                            <VisualState x:Name="Disabled" />
                                                            <VisualState x:Name="ReadOnly" />
                                                        </VisualStateGroup>
                                                        <VisualStateGroup x:Name="FocusStates">
                                                            <VisualState x:Name="Focused" />
                                                            <VisualState x:Name="Unfocused" />
                                                        </VisualStateGroup>
                                                        <VisualStateGroup x:Name="WatermarkStates">
                                                            <VisualState x:Name="WatermarkHidden">
                                                                <Storyboard>
                                                                    <DoubleAnimation Duration="0"
                                                                                     Storyboard.TargetName="WatermarkVisualElement"
                                                                                     Storyboard.TargetProperty="Opacity"
                                                                                     To="0" />
                                                                </Storyboard>
                                                            </VisualState>
                                                            <VisualState x:Name="WatermarkVisible" />
                                                        </VisualStateGroup>
                                                    </VisualStateManager.VisualStateGroups>
                                                </Grid>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </telerik:RadWatermarkTextBox.Style>
                        </telerik:RadWatermarkTextBox>

                        <telerik:RadDropDownButton x:Name="PART_DropDownButton"
                                                   Grid.Column="1"
                                                   telerik:DateTimePickerExtensions.FocusContentOnOpen="True"
                                                   CloseOnEnter="True"
                                                   IsOpen="{Binding IsDropDownOpen,
                                                                    Mode=TwoWay,
                                                                    RelativeSource={RelativeSource TemplatedParent}}"
                                                   IsTabStop="False"
                                                   PopupPlacementTarget="{Binding ElementName=PART_DateTimeInput}"
                                                   TabIndex="1">
                            <telerik:RadDropDownButton.DropDownContent>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="240" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>

                                    <telerik:RadCalendar x:Name="PART_Calendar"
                                                         BlackoutDates="{Binding BlackoutDates,
                                                                                 Mode=TwoWay,
                                                                                 RelativeSource={RelativeSource TemplatedParent}}"
                                                         Culture="{TemplateBinding Culture}"
                                                         DateSelectionMode="{TemplateBinding DateSelectionMode}"
                                                         DisplayDate="{Binding DisplayDate,
                                                                               Mode=TwoWay,
                                                                               RelativeSource={RelativeSource TemplatedParent}}"
                                                         DisplayDateEnd="{Binding DisplayDateEnd,
                                                                                  Mode=TwoWay,
                                                                                  RelativeSource={RelativeSource TemplatedParent}}"
                                                         DisplayDateStart="{Binding DisplayDateStart,
                                                                                    Mode=TwoWay,
                                                                                    RelativeSource={RelativeSource TemplatedParent}}"
                                                         IsReadOnly="{TemplateBinding IsReadOnly}"
                                                         SelectableDateEnd="{Binding SelectableDateEnd,
                                                                                     Mode=TwoWay,
                                                                                     RelativeSource={RelativeSource TemplatedParent}}"
                                                         SelectableDateStart="{Binding SelectableDateStart,
                                                                                       Mode=TwoWay,
                                                                                       RelativeSource={RelativeSource TemplatedParent}}"
                                                         SelectedDate="{Binding SelectedDate,
                                                                                Mode=TwoWay,
                                                                                RelativeSource={RelativeSource TemplatedParent}}"
                                                         SelectionMode="Single"
                                                         Style="{TemplateBinding CalendarStyle}" />

                                    <telerik:DateTimePickerClock x:Name="PART_Clock"
                                                                 Grid.Column="1"
                                                                 CanKeyboardNavigationSelectItems="{x:Null}"
                                                                 Culture="{TemplateBinding Culture}"
                                                                 EndTime="{TemplateBinding EndTime}"
                                                                 IsReadOnly="{TemplateBinding IsReadOnly}"
                                                                 IsTabStop="False"
                                                                 IsTextSearchEnabled="True"
                                                                 SelectedItem="{Binding SelectedTime,
                                                                                        Mode=TwoWay,
                                                                                        RelativeSource={RelativeSource TemplatedParent}}"
                                                                 SelectedValueBinding="{x:Null}"
                                                                 StartTime="{TemplateBinding StartTime}"
                                                                 Style="{TemplateBinding ClockStyle}"
                                                                 TextBinding="{x:Null}"
                                                                 TimeInterval="{TemplateBinding TimeInterval}" />
                                </Grid>
                            </telerik:RadDropDownButton.DropDownContent>

                            <telerik:RadDropDownButton.Style>
                                <Style TargetType="{x:Type telerik:RadDropDownButton}">
                                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                    <Setter Property="VerticalContentAlignment" Value="Center" />
                                    <Setter Property="IsTabStop" Value="True" />
                                    <Setter Property="Background" Value="Transparent" />
                                    <Setter Property="BorderThickness" Value="1" />
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type telerik:RadDropDownButton}">
                                                <Grid>
                                                    <Border x:Name="Background"
                                                            MinWidth="25"
                                                            Background="{DynamicResource {x:Static brushes:BrushSet.AlternativeBackgroundBrushKey}}"
                                                            BorderBrush="{DynamicResource {x:Static brushes:BrushSet.BorderBrushKey}}"
                                                            BorderThickness="2"
                                                            SnapsToDevicePixels="True" />
                                                    <Border x:Name="BackgroundChecked"
                                                            MinWidth="25"
                                                            Background="{DynamicResource {x:Static brushes:BrushSet.AlternativeBackgroundBrushKey}}"
                                                            BorderBrush="{DynamicResource {x:Static brushes:BrushSet.BorderBrushKey}}"
                                                            BorderThickness="2"
                                                            SnapsToDevicePixels="True"
                                                            Visibility="Collapsed" />
                                                    <Path x:Name="Icon"
                                                          Width="8"
                                                          Height="8"
                                                          Data="M6,6L8,6 8,8 6,8z M3,6L5,6 5,8 3,8z M0,6L2,6 2,8 0,8z M6,3L8,3 8,5 6,5z M3,3L5,3 5,5 3,5z M0,3L2,3 2,5 0,5z M6,0L8,0 8,2 6,2z M3,0L5,0 5,2 3,2z M0,0L2,0 2,2 0,2z"
                                                          Fill="{DynamicResource {x:Static brushes:BrushSet.MarkBrushKey}}"
                                                          SnapsToDevicePixels="True" />
                                                    <Path x:Name="IconChecked"
                                                          Width="8"
                                                          Height="8"
                                                          Data="M6,6L8,6 8,8 6,8z M3,6L5,6 5,8 3,8z M0,6L2,6 2,8 0,8z M6,3L8,3 8,5 6,5z M3,3L5,3 5,5 3,5z M0,3L2,3 2,5 0,5z M6,0L8,0 8,2 6,2z M3,0L5,0 5,2 3,2z M0,0L2,0 2,2 0,2z"
                                                          Fill="{DynamicResource {x:Static brushes:BrushSet.MarkBrushKey}}"
                                                          SnapsToDevicePixels="True"
                                                          Visibility="Collapsed" />
                                                    <Popup x:Name="DropDownPopup"
                                                           Focusable="False"
                                                           IsOpen="{Binding IsOpen,
                                                                            RelativeSource={RelativeSource TemplatedParent}}"
                                                           Placement="Bottom"
                                                           StaysOpen="False">
                                                        <Border BorderBrush="{DynamicResource {x:Static brushes:BrushSet.BorderBrushKey}}" BorderThickness="2">
                                                            <ContentPresenter x:Name="DropDownPopupContent"
                                                                              Content="{TemplateBinding DropDownContent}"
                                                                              ContentTemplate="{TemplateBinding DropDownContentTemplate}" />
                                                        </Border>
                                                    </Popup>
                                                    <Border x:Name="BackgroundDisabled"
                                                            MinWidth="25"
                                                            Visibility="Collapsed">
                                                        <Border.Background>
                                                            <SolidColorBrush Opacity="0.3" Color="#424242" />
                                                        </Border.Background>
                                                    </Border>
                                                    <VisualStateManager.VisualStateGroups>
                                                        <VisualStateGroup x:Name="CommonStates">
                                                            <VisualState x:Name="Normal" />
                                                            <VisualState x:Name="MouseOver" />
                                                            <VisualState x:Name="Pressed">
                                                                <Storyboard>
                                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Background" Storyboard.TargetProperty="(Panel.Background)">
                                                                        <DiscreteObjectKeyFrame KeyTime="0">
                                                                            <DiscreteObjectKeyFrame.Value>
                                                                                <SolidColorBrush Color="#484848" />
                                                                            </DiscreteObjectKeyFrame.Value>
                                                                        </DiscreteObjectKeyFrame>
                                                                    </ObjectAnimationUsingKeyFrames>
                                                                </Storyboard>
                                                            </VisualState>
                                                            <VisualState x:Name="Disabled">
                                                                <Storyboard>
                                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BackgroundDisabled" Storyboard.TargetProperty="(UIElement.Visibility)">
                                                                        <DiscreteObjectKeyFrame KeyTime="0">
                                                                            <DiscreteObjectKeyFrame.Value>
                                                                                <Visibility>Visible</Visibility>
                                                                            </DiscreteObjectKeyFrame.Value>
                                                                        </DiscreteObjectKeyFrame>
                                                                    </ObjectAnimationUsingKeyFrames>
                                                                </Storyboard>
                                                            </VisualState>
                                                        </VisualStateGroup>
                                                        <VisualStateGroup x:Name="FocusStates">
                                                            <VisualState x:Name="Unfocused" />
                                                            <VisualState x:Name="Focused" />
                                                        </VisualStateGroup>
                                                        <VisualStateGroup x:Name="IsOpenedState">
                                                            <VisualState x:Name="Closed" />
                                                            <VisualState x:Name="Opened">
                                                                <Storyboard>
                                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BackgroundChecked" Storyboard.TargetProperty="(UIElement.Visibility)">
                                                                        <DiscreteObjectKeyFrame KeyTime="0">
                                                                            <DiscreteObjectKeyFrame.Value>
                                                                                <Visibility>Visible</Visibility>
                                                                            </DiscreteObjectKeyFrame.Value>
                                                                        </DiscreteObjectKeyFrame>
                                                                    </ObjectAnimationUsingKeyFrames>
                                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="IconChecked" Storyboard.TargetProperty="(UIElement.Visibility)">
                                                                        <DiscreteObjectKeyFrame KeyTime="0">
                                                                            <DiscreteObjectKeyFrame.Value>
                                                                                <Visibility>Visible</Visibility>
                                                                            </DiscreteObjectKeyFrame.Value>
                                                                        </DiscreteObjectKeyFrame>
                                                                    </ObjectAnimationUsingKeyFrames>
                                                                </Storyboard>
                                                            </VisualState>
                                                            <VisualState x:Name="Indeterminate" />
                                                        </VisualStateGroup>
                                                        <VisualStateGroup x:Name="DropDownButtonPosition">
                                                            <VisualState x:Name="DropDownButtonAtLeft" />
                                                            <VisualState x:Name="DropDownButtonAtTop" />
                                                            <VisualState x:Name="DropDownButtonAtRight" />
                                                            <VisualState x:Name="DropDownButtonAtBottom" />
                                                        </VisualStateGroup>
                                                        <VisualStateGroup x:Name="PopupPlacementState">
                                                            <VisualState x:Name="PlacementBottom" />
                                                            <VisualState x:Name="PlacementTop" />
                                                            <VisualState x:Name="PlacementLeft" />
                                                            <VisualState x:Name="PlacementRight" />
                                                        </VisualStateGroup>
                                                    </VisualStateManager.VisualStateGroups>
                                                </Grid>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </telerik:RadDropDownButton.Style>
                        </telerik:RadDropDownButton>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BackgroundDisabled" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="DropDownOpen">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Background" Storyboard.TargetProperty="(Border.BorderBrush)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <SolidColorBrush Color="#FF1A1A1A" />
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Background" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DropDownOpenBorder" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused" />
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="InputTypeStates">
                                <VisualState x:Name="DateTimePicker">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Clock" Storyboard.TargetProperty="(FrameworkElement.Margin)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Thickness>-1,0,0,0</Thickness>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="DatePicker">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Clock" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="TimePicker">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Calendar" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>